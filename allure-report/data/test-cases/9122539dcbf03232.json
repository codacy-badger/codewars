{
  "uid" : "9122539dcbf03232",
  "name" : "Testing anagrams function",
  "fullName" : "kyu_5.where_my_anagrams_at.test_anagrams.AnagramsTestCase#test_anagrams",
  "historyId" : "e4a3219ae28469fc10d020cba24dd0dd",
  "time" : {
    "start" : 1580093585377,
    "stop" : 1580093585379,
    "duration" : 2
  },
  "description" : "\n        Test a function that will find all the anagrams of a word from a list.\n        You will be given two inputs a word and an array with words. You should\n        return an array of all the anagrams or an empty array if there are none.\n\n        For example:\n\n        anagrams('abba', ['aabb', 'abcd', 'bbaa', 'dada']) => ['aabb', 'bbaa']\n        anagrams('racer', ['crazer', 'carer', 'racar', 'caers', 'racer']) => ['carer', 'racer']\n        anagrams('laser', ['lazing', 'lazy',  'lacer']) => []\n        :return:\n        ",
  "descriptionHtml" : "<pre><code>    Test a function that will find all the anagrams of a word from a list.\n    You will be given two inputs a word and an array with words. You should\n    return an array of all the anagrams or an empty array if there are none.\n\n    For example:\n\n    anagrams('abba', ['aabb', 'abcd', 'bbaa', 'dada']) =&gt; ['aabb', 'bbaa']\n    anagrams('racer', ['crazer', 'carer', 'racar', 'caers', 'racer']) =&gt; ['carer', 'racer']\n    anagrams('laser', ['lazing', 'lazy',  'lacer']) =&gt; []\n    :return:\n</code></pre>\n",
  "status" : "passed",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "_UnitTestCase__pytest_class_setup",
    "time" : {
      "start" : 1580093585375,
      "stop" : 1580093585375,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0
  } ],
  "testStage" : {
    "description" : "\n        Test a function that will find all the anagrams of a word from a list.\n        You will be given two inputs a word and an array with words. You should\n        return an array of all the anagrams or an empty array if there are none.\n\n        For example:\n\n        anagrams('abba', ['aabb', 'abcd', 'bbaa', 'dada']) => ['aabb', 'bbaa']\n        anagrams('racer', ['crazer', 'carer', 'racar', 'caers', 'racer']) => ['carer', 'racer']\n        anagrams('laser', ['lazing', 'lazy',  'lacer']) => []\n        :return:\n        ",
    "status" : "passed",
    "steps" : [ {
      "name" : "Enter test data (list of strings) and verify the output",
      "time" : {
        "start" : 1580093585377,
        "stop" : 1580093585378,
        "duration" : 1
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false,
      "stepsCount" : 0
    } ],
    "attachments" : [ {
      "uid" : "bf5cb3e7e138abfe",
      "name" : "stdout",
      "source" : "bf5cb3e7e138abfe.txt",
      "type" : "text/plain",
      "size" : 170
    } ],
    "parameters" : [ ],
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true,
    "stepsCount" : 1
  },
  "afterStages" : [ {
    "name" : "_UnitTestCase__pytest_class_setup::0",
    "time" : {
      "start" : 1580093585382,
      "stop" : 1580093585383,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0
  } ],
  "labels" : [ {
    "name" : "severity",
    "value" : "normal"
  }, {
    "name" : "story",
    "value" : "Where my anagrams at?"
  }, {
    "name" : "subSuite",
    "value" : "Unit Tests"
  }, {
    "name" : "epic",
    "value" : "5 kyu"
  }, {
    "name" : "tag",
    "value" : "STRINGS"
  }, {
    "name" : "tag",
    "value" : "ALGORITHMS"
  }, {
    "name" : "feature",
    "value" : "String"
  }, {
    "name" : "suite",
    "value" : "Algorithms"
  }, {
    "name" : "parentSuite",
    "value" : "Novice"
  }, {
    "name" : "host",
    "value" : "DESKTOP-RJASUD2"
  }, {
    "name" : "thread",
    "value" : "7648-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "kyu_5.where_my_anagrams_at.test_anagrams"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ {
    "name" : "Source/Kata",
    "url" : "https://www.codewars.com/kata/523a86aa4230ebb5420001e1/train/python",
    "type" : "link"
  } ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ {
      "uid" : "9e620bc870a0a630",
      "status" : "passed",
      "time" : {
        "start" : 1580092931680,
        "stop" : 1580092931682,
        "duration" : 2
      }
    }, {
      "uid" : "6ddac68dfd1448a6",
      "status" : "passed",
      "time" : {
        "start" : 1580016117327,
        "stop" : 1580016117328,
        "duration" : 1
      }
    }, {
      "uid" : "c9ef0b6c7cfa2edd",
      "status" : "passed",
      "time" : {
        "start" : 1580015502436,
        "stop" : 1580015502438,
        "duration" : 2
      }
    }, {
      "uid" : "d894b92a5de84906",
      "status" : "passed",
      "time" : {
        "start" : 1580011917694,
        "stop" : 1580011917695,
        "duration" : 1
      }
    }, {
      "uid" : "ca091a6d1702e0f0",
      "status" : "passed",
      "time" : {
        "start" : 1579746652247,
        "stop" : 1579746652248,
        "duration" : 1
      }
    }, {
      "uid" : "15df525aa9f39284",
      "status" : "passed",
      "time" : {
        "start" : 1579733200056,
        "stop" : 1579733200057,
        "duration" : 1
      }
    }, {
      "uid" : "fb4e1055417435d8",
      "status" : "passed",
      "time" : {
        "start" : 1579486688071,
        "stop" : 1579486688072,
        "duration" : 1
      }
    }, {
      "uid" : "85370e517b2e02d1",
      "status" : "passed",
      "time" : {
        "start" : 1579482234793,
        "stop" : 1579482234795,
        "duration" : 2
      }
    }, {
      "uid" : "e1dab99a7f52c187",
      "status" : "passed",
      "time" : {
        "start" : 1579476681475,
        "stop" : 1579476681477,
        "duration" : 2
      }
    }, {
      "uid" : "2323e366ba10a692",
      "status" : "passed",
      "time" : {
        "start" : 1579417127351,
        "stop" : 1579417127355,
        "duration" : 4
      }
    }, {
      "uid" : "717d3c2e1c57e899",
      "status" : "passed",
      "time" : {
        "start" : 1579416090705,
        "stop" : 1579416090707,
        "duration" : 2
      }
    }, {
      "uid" : "ad8f6f6fae3c79dd",
      "status" : "passed",
      "time" : {
        "start" : 1579407048999,
        "stop" : 1579407049000,
        "duration" : 1
      }
    }, {
      "uid" : "47bc956a46dac534",
      "status" : "passed",
      "time" : {
        "start" : 1579406491272,
        "stop" : 1579406491273,
        "duration" : 1
      }
    }, {
      "uid" : "6c28fc291d6eab7b",
      "status" : "passed",
      "time" : {
        "start" : 1579406086270,
        "stop" : 1579406086272,
        "duration" : 2
      }
    }, {
      "uid" : "aa6a438a2464cb7b",
      "status" : "passed",
      "time" : {
        "start" : 1579151845117,
        "stop" : 1579151845118,
        "duration" : 1
      }
    }, {
      "uid" : "a0362759decb819b",
      "status" : "passed",
      "time" : {
        "start" : 1578812684902,
        "stop" : 1578812684903,
        "duration" : 1
      }
    }, {
      "uid" : "7722ed5fb7dd7080",
      "status" : "passed",
      "time" : {
        "start" : 1578810674323,
        "stop" : 1578810674324,
        "duration" : 1
      }
    }, {
      "uid" : "faec82dc9051d97",
      "status" : "passed",
      "time" : {
        "start" : 1578810574523,
        "stop" : 1578810574525,
        "duration" : 2
      }
    }, {
      "uid" : "d6ac4d743df47e7d",
      "status" : "passed",
      "time" : {
        "start" : 1578810138412,
        "stop" : 1578810138413,
        "duration" : 1
      }
    }, {
      "uid" : "d2dedc2bd68672c8",
      "status" : "passed",
      "time" : {
        "start" : 1578809489745,
        "stop" : 1578809489746,
        "duration" : 1
      }
    }, {
      "uid" : "4b0b882c65d03cc7",
      "status" : "passed",
      "time" : {
        "start" : 1578808951569,
        "stop" : 1578808951570,
        "duration" : 1
      }
    }, {
      "uid" : "81e9b2f54aba4572",
      "status" : "passed",
      "time" : {
        "start" : 1578808370265,
        "stop" : 1578808370267,
        "duration" : 2
      }
    }, {
      "uid" : "6a174077661641c1",
      "status" : "passed",
      "time" : {
        "start" : 1578803683143,
        "stop" : 1578803683144,
        "duration" : 1
      }
    }, {
      "uid" : "cbbd39856cc1bee9",
      "status" : "passed",
      "time" : {
        "start" : 1578802614090,
        "stop" : 1578802614091,
        "duration" : 1
      }
    }, {
      "uid" : "422248a4059dd829",
      "status" : "passed",
      "time" : {
        "start" : 1578801842016,
        "stop" : 1578801842017,
        "duration" : 1
      }
    }, {
      "uid" : "d83ceaafbf927703",
      "status" : "passed",
      "time" : {
        "start" : 1577672192529,
        "stop" : 1577672192530,
        "duration" : 1
      }
    }, {
      "uid" : "668b63f9f061dfe4",
      "status" : "passed",
      "time" : {
        "start" : 1577669953684,
        "stop" : 1577669953686,
        "duration" : 2
      }
    }, {
      "uid" : "4a8f6b1fc09c0f6a",
      "status" : "passed",
      "time" : {
        "start" : 1577327509089,
        "stop" : 1577327509089,
        "duration" : 0
      }
    }, {
      "uid" : "c528f282f03a3924",
      "status" : "passed",
      "time" : {
        "start" : 1577321735786,
        "stop" : 1577321735787,
        "duration" : 1
      }
    }, {
      "uid" : "f9902c04f3d68955",
      "status" : "passed",
      "time" : {
        "start" : 1577063534176,
        "stop" : 1577063534178,
        "duration" : 2
      }
    } ],
    "categories" : [ ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 29,
        "unknown" : 0,
        "total" : 29
      },
      "items" : [ {
        "uid" : "15ad4ac9b928d031",
        "status" : "passed",
        "time" : {
          "start" : 1580016117327,
          "stop" : 1580016117328,
          "duration" : 1
        }
      }, {
        "uid" : "24f5931bca121fc1",
        "status" : "passed",
        "time" : {
          "start" : 1580015502436,
          "stop" : 1580015502438,
          "duration" : 2
        }
      }, {
        "uid" : "56b4021e83b2440a",
        "status" : "passed",
        "time" : {
          "start" : 1579746652247,
          "stop" : 1579746652248,
          "duration" : 1
        }
      }, {
        "uid" : "300d7f3f54575945",
        "status" : "passed",
        "time" : {
          "start" : 1579733200056,
          "stop" : 1579733200057,
          "duration" : 1
        }
      }, {
        "uid" : "9c3927c71266e9a2",
        "status" : "passed",
        "time" : {
          "start" : 1579486688071,
          "stop" : 1579486688072,
          "duration" : 1
        }
      } ]
    },
    "tags" : [ "STRINGS", "ALGORITHMS" ]
  },
  "source" : "9122539dcbf03232.json",
  "parameterValues" : [ ]
}