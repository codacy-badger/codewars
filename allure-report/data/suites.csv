"Status","Start Time","Stop Time","Duration in ms","Parent Suite","Suite","Sub Suite","Test Class","Test Method","Name","Description"
"passed","Thu Oct 17 14:27:54 PDT 2019","Thu Oct 17 14:27:54 PDT 2019","1","Beginner","Math","Unit Tests","","","Negative numbers","
		-1: Negative numbers cannot be square numbers
		:return:
		"
"passed","Thu Oct 17 14:27:54 PDT 2019","Thu Oct 17 14:27:54 PDT 2019","1","Beginner","Data Structures","Unit Tests","","","XOR logical operator","
		Exclusive or or exclusive disjunction is a
		logical operation that outputs true only when
		inputs differ (one is true, the other is false).

		XOR outputs true whenever the inputs differ:

		Source:
		https://en.wikipedia.org/wiki/Exclusive_or
		:return:
		"
"passed","Thu Oct 17 14:27:54 PDT 2019","Thu Oct 17 14:27:54 PDT 2019","5","Beginner","Algorithms","Unit Tests","","","powers function should return an array of unique numbers","
		The function powers takes a single parameter,
		the number n, and should return an array of unique numbers.
		:return:
		"
"passed","Thu Oct 17 14:27:54 PDT 2019","Thu Oct 17 14:27:54 PDT 2019","4","Beginner","Control Flow","Unit Tests","","","Wolf at the beginning of the queue","
		If the wolf is the closest animal to you,
		return ""Pls go away and stop eating my sheep"".
		:return:
		"
"passed","Thu Oct 17 14:27:54 PDT 2019","Thu Oct 17 14:27:54 PDT 2019","2","Beginner","Data Structures","Unit Tests","","","'multiply' function verification with random list","
        Returns a list that misses only one element
        :return:
        "
"passed","Thu Oct 17 14:27:54 PDT 2019","Thu Oct 17 14:27:54 PDT 2019","2","Beginner","Algorithms","Unit Tests","","","a or b is negative","
		a or b is negative
		:return:
		"
"passed","Thu Oct 17 14:27:54 PDT 2019","Thu Oct 17 14:27:54 PDT 2019","1","Beginner","Data Structures","Unit Tests","","","'multiply' function verification with empty list","
        Test with empty list
        :return:
        "
"passed","Thu Oct 17 14:27:54 PDT 2019","Thu Oct 17 14:27:54 PDT 2019","2","Beginner","Control Flow","Unit Tests","","","Wolf in the middle of the queue","
		If the wolf is the closest animal to you,
		return ""Pls go away and stop eating my sheep"".
		:return:
		"
"passed","Thu Oct 17 14:27:54 PDT 2019","Thu Oct 17 14:27:54 PDT 2019","1","Beginner","Algorithms","Unit Tests","","","a an b are positive numbers","
		a an b are positive numbers
		:return:
		"
"passed","Thu Oct 17 14:27:54 PDT 2019","Thu Oct 17 14:27:54 PDT 2019","1","Novice","Algorithms","Unit Tests","","","String alphabet chars and spaces","
        Repeating char is a space
        :return:
        "
"passed","Thu Oct 17 14:27:54 PDT 2019","Thu Oct 17 14:27:54 PDT 2019","1","Beginner","Data Structures","Unit Tests","","","Should return 'Fail!'s","
		If there are no good ideas,
		as is often the case, return 'Fail!'.
		:return:
		"
"passed","Thu Oct 17 14:27:54 PDT 2019","Thu Oct 17 14:27:54 PDT 2019","1","Beginner","Algorithms","Unit Tests","","","a and b are equal","
		a and b are equal
		:return:
		"
"passed","Thu Oct 17 14:27:54 PDT 2019","Thu Oct 17 14:27:54 PDT 2019","2","Beginner","Data Structures","Unit Tests","","","Should return 'Publish!'","
		If there are one or two good ideas,
		return 'Publish!',
		:return:
		"
"passed","Thu Oct 17 14:27:54 PDT 2019","Thu Oct 17 14:27:54 PDT 2019","1","Beginner","Control Flow","Unit Tests","","","Wolf at the end of the queue","
		If the wolf is not the closest animal to you,
		return ""Oi! Sheep number N! You are about to be eaten by a wolf!""
		where N is the sheep's position in the queue.
		:return:
		"
"passed","Thu Oct 17 14:27:54 PDT 2019","Thu Oct 17 14:27:54 PDT 2019","1","Novice","Algorithms","Unit Tests","","","String with no alphabet chars","
        Test string with no alphabet chars
        :return:
        "
"passed","Thu Oct 17 14:27:54 PDT 2019","Thu Oct 17 14:27:54 PDT 2019","0","Beginner","Data Structures","Unit Tests","","","'multiply' function verification with one element list","
        Returns [] if list has only one element
        :return:
        "
"passed","Thu Oct 17 14:27:54 PDT 2019","Thu Oct 17 14:27:54 PDT 2019","0","Novice","Algorithms","Unit Tests","","","String with no duplicate chars","
        Test string with no duplicate chars
        :return:
        "
"passed","Thu Oct 17 14:27:54 PDT 2019","Thu Oct 17 14:27:54 PDT 2019","0","Beginner","Math","Unit Tests","","","Square numbers (positive)","
		25 is a square number
		:return:
		"
"passed","Thu Oct 17 14:27:54 PDT 2019","Thu Oct 17 14:27:54 PDT 2019","1","Beginner","Data Structures","Unit Tests","","","OR logical operator","
		In logic and mathematics, or is the
		truth-functional operator of (inclusive)
		disjunction, also known as alternation.

		The or of a set of operands is true if
		and only if one or more of its operands is true.

		Source:
		https://en.wikipedia.org/wiki/Logical_disjunction

		:return:
		"
"passed","Thu Oct 17 14:27:54 PDT 2019","Thu Oct 17 14:27:54 PDT 2019","1","Beginner","Data Structures","Unit Tests","","","AND logical operator","
		And (âˆ§) is the truth-functional
		operator of logical conjunction

		The and of a set of operands is true
		if and only if all of its operands are true.

		Source:
		https://en.wikipedia.org/wiki/Logical_conjunction

		:return:
		"
"passed","Thu Oct 17 14:27:54 PDT 2019","Thu Oct 17 14:27:54 PDT 2019","1","Beginner","Math","Unit Tests","","","goals function verification","
		Verify that the function returns Messi's
		total number of goals in all three leagues.
		:return:
		"
"passed","Thu Oct 17 14:27:54 PDT 2019","Thu Oct 17 14:27:54 PDT 2019","1","Novice","Algorithms","Unit Tests","","","String with alphabet chars only","
        Test string with alphabet chars only
        :return:
        "
"passed","Thu Oct 17 14:27:54 PDT 2019","Thu Oct 17 14:27:54 PDT 2019","2","Beginner","Control Flow","Unit Tests","","","Verify that greet function returns the proper message","
		Use conditionals to to verify that greet
		function returns the proper message.
		:return:
		"
"passed","Thu Oct 17 14:27:54 PDT 2019","Thu Oct 17 14:27:54 PDT 2019","1","Novice","Algorithms","Unit Tests","","","String with mixed type of chars","
        Test string with mixed type of chars
        :return:
        "
"passed","Thu Oct 17 14:27:54 PDT 2019","Thu Oct 17 14:27:54 PDT 2019","1","Beginner","Math","Unit Tests","","","move function tests","
		The player rolls the dice and moves the number
		of spaces indicated by the dice two times.

		Pass position and roll and compare the output
		to the expected result
		:return:
		"
"passed","Thu Oct 17 14:27:54 PDT 2019","Thu Oct 17 14:27:54 PDT 2019","0","Beginner","Data Structures","Unit Tests","","","Testing toJadenCase function (positive)","
		Simple positive test
		:return:
		"
"passed","Thu Oct 17 14:27:54 PDT 2019","Thu Oct 17 14:27:54 PDT 2019","1","Beginner","Math","Unit Tests","","","'multiply' function verification","
        Verify that multiply function
		returns correct result
		:return:
		"
"passed","Thu Oct 17 14:27:54 PDT 2019","Thu Oct 17 14:27:54 PDT 2019","1","Novice","Data Structures","Unit Tests","","","Find the int that appears an odd number of times","
		Sample testing.
		Expected result is 5
		:return:
		"
"passed","Thu Oct 17 14:27:54 PDT 2019","Thu Oct 17 14:27:54 PDT 2019","1","Beginner","Data Structures","Unit Tests","","","'multiply' function verification: lists with multiple digits","
        Test lists with multiple digits
        :return:
        "
"passed","Thu Oct 17 14:27:54 PDT 2019","Thu Oct 17 14:27:54 PDT 2019","1","Beginner","Data Structures","Unit Tests","","","Two smallest numbers in the start of the list","
		Test sum_two_smallest_numbers function
		The function should return the sum of
		the two lowest positive numbers
		:return:
		"
"passed","Thu Oct 17 14:27:54 PDT 2019","Thu Oct 17 14:27:54 PDT 2019","0","Beginner","Math","Unit Tests","","","Square numbers (positive)","
		4 is a square number
		:return:
		"
"passed","Thu Oct 17 14:27:54 PDT 2019","Thu Oct 17 14:27:54 PDT 2019","2","Beginner","Data Structures","Unit Tests","","","Should return 'I smell a series!'","
		if there are more than 2 return
		'I smell a series!'.
		:return:
		"
"passed","Thu Oct 17 14:27:54 PDT 2019","Thu Oct 17 14:27:54 PDT 2019","1","Beginner","Data Structures","Unit Tests","","","Testing period_is_late function (positive)","
		Positive tests
		:return:
		"
"passed","Thu Oct 17 14:27:54 PDT 2019","Thu Oct 17 14:27:54 PDT 2019","0","Beginner","Math","Unit Tests","","","Non square numbers (negative)","
		3 is not a square number
		:return:
		"
"passed","Thu Oct 17 14:27:54 PDT 2019","Thu Oct 17 14:27:54 PDT 2019","1","Beginner","Data Structures","Unit Tests","","","Testing make_upper_case function","
		Sample Tests for make_upper_case function
		:return:
		"
"passed","Thu Oct 17 14:27:54 PDT 2019","Thu Oct 17 14:27:54 PDT 2019","1","Beginner","Math","Unit Tests","","","Non square numbers (negative)","
		26 is not a square number
		:return:
		"
"passed","Thu Oct 17 14:27:54 PDT 2019","Thu Oct 17 14:27:54 PDT 2019","1","Beginner","Data Structures","Unit Tests","","","Testing toJadenCase function (negative)","
		Simple negative test
		:return:
		"
"passed","Thu Oct 17 14:27:54 PDT 2019","Thu Oct 17 14:27:54 PDT 2019","0","Beginner","Advanced Language Features","Unit Tests","","","a and b are equal","
		The string ""This website is for losers LOL!""
		should become ""Ths wbst s fr lsrs LL!""
		:return:
		"
"passed","Thu Oct 17 14:27:54 PDT 2019","Thu Oct 17 14:27:54 PDT 2019","1","Beginner","Math","Unit Tests","","","Zero","
		0 is a square number
		:return:
		"
"passed","Thu Oct 17 14:27:54 PDT 2019","Thu Oct 17 14:27:54 PDT 2019","3","Beginner","Data Structures","Unit Tests","","","Test that no_space function removes the spaces","
		Test that no_space function removes the spaces
		from the string, then return the resultant string.
		:return:
		"
"passed","Thu Oct 17 14:27:54 PDT 2019","Thu Oct 17 14:27:54 PDT 2019","2","Beginner","Data Structures","Unit Tests","","","Testing period_is_late function (negative)","
		Negative tests
		:return:
		"
