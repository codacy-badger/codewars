{
  "uid" : "7fe020763e46dc31",
  "name" : "Testing gap function",
  "fullName" : "kyu_7.find_the_longest_gap.test_gap.GapTestCase#test_gap",
  "historyId" : "32fca0dba156c29ff0c5aa5efe4a761f",
  "time" : {
    "start" : 1574615797003,
    "stop" : 1574615797003,
    "duration" : 0
  },
  "description" : "\n\t\tTesting gap function with various test inputs\n\n\t\tA binary gap within a positive number num is\n\t\tany sequence of consecutive zeros that is\n\t\tsurrounded by ones at both ends in the binary\n\t\trepresentation of num.\n\n\t\tThe gap function should return the length of\n\t\tits longest binary gap.\n\n\t\tThe function should return 0 if num doesn't\n\t\tcontain a binary gap.\n\t\t:return:\n\t\t",
  "descriptionHtml" : "<pre><code>\tTesting gap function with various test inputs\n\n\tA binary gap within a positive number num is\n\tany sequence of consecutive zeros that is\n\tsurrounded by ones at both ends in the binary\n\trepresentation of num.\n\n\tThe gap function should return the length of\n\tits longest binary gap.\n\n\tThe function should return 0 if num doesn't\n\tcontain a binary gap.\n\t:return:\n</code></pre>\n",
  "status" : "passed",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "_UnitTestCase__pytest_class_setup",
    "time" : {
      "start" : 1574615797002,
      "stop" : 1574615797002,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0,
    "hasContent" : false,
    "stepsCount" : 0
  } ],
  "testStage" : {
    "description" : "\n\t\tTesting gap function with various test inputs\n\n\t\tA binary gap within a positive number num is\n\t\tany sequence of consecutive zeros that is\n\t\tsurrounded by ones at both ends in the binary\n\t\trepresentation of num.\n\n\t\tThe gap function should return the length of\n\t\tits longest binary gap.\n\n\t\tThe function should return 0 if num doesn't\n\t\tcontain a binary gap.\n\t\t:return:\n\t\t",
    "status" : "passed",
    "steps" : [ {
      "name" : "Enter integer and assert the result",
      "time" : {
        "start" : 1574615797003,
        "stop" : 1574615797003,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "shouldDisplayMessage" : false,
      "attachmentsCount" : 0,
      "hasContent" : false,
      "stepsCount" : 0
    } ],
    "attachments" : [ {
      "uid" : "1dd6c92fdbc59298",
      "name" : "stdout",
      "source" : "1dd6c92fdbc59298.txt",
      "type" : "text/plain",
      "size" : 120
    } ],
    "parameters" : [ ],
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 1,
    "hasContent" : true,
    "stepsCount" : 1
  },
  "afterStages" : [ {
    "name" : "_UnitTestCase__pytest_class_setup::0",
    "time" : {
      "start" : 1574615797005,
      "stop" : 1574615797005,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0,
    "hasContent" : false,
    "stepsCount" : 0
  } ],
  "labels" : [ {
    "name" : "severity",
    "value" : "normal"
  }, {
    "name" : "subSuite",
    "value" : "Unit Tests"
  }, {
    "name" : "parentSuite",
    "value" : "Beginner"
  }, {
    "name" : "epic",
    "value" : "7 kyu"
  }, {
    "name" : "suite",
    "value" : "Advanced Language Features"
  }, {
    "name" : "story",
    "value" : "Find the longest gap!"
  }, {
    "name" : "feature",
    "value" : "String"
  }, {
    "name" : "host",
    "value" : "DESKTOP-RJASUD2"
  }, {
    "name" : "thread",
    "value" : "5344-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "kyu_7.find_the_longest_gap.test_gap"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ {
      "uid" : "9aa263962d6b5285",
      "status" : "passed",
      "time" : {
        "start" : 1574615721466,
        "stop" : 1574615721468,
        "duration" : 2
      }
    }, {
      "uid" : "30ad8c97386cf78a",
      "status" : "passed",
      "time" : {
        "start" : 1574018663678,
        "stop" : 1574018663679,
        "duration" : 1
      }
    }, {
      "uid" : "106f7b6d1ae54443",
      "status" : "passed",
      "time" : {
        "start" : 1574012905693,
        "stop" : 1574012905696,
        "duration" : 3
      }
    }, {
      "uid" : "7e6e19d3140b9ec4",
      "status" : "passed",
      "time" : {
        "start" : 1573966633111,
        "stop" : 1573966633112,
        "duration" : 1
      }
    }, {
      "uid" : "f7b1abe1b6508e3",
      "status" : "passed",
      "time" : {
        "start" : 1573956297003,
        "stop" : 1573956297005,
        "duration" : 2
      }
    }, {
      "uid" : "e9c2382810a7535b",
      "status" : "passed",
      "time" : {
        "start" : 1573517399924,
        "stop" : 1573517399925,
        "duration" : 1
      }
    }, {
      "uid" : "c49a1aa02f412af1",
      "status" : "passed",
      "time" : {
        "start" : 1573517319429,
        "stop" : 1573517319430,
        "duration" : 1
      }
    }, {
      "uid" : "32e5e413ea551b4d",
      "status" : "passed",
      "time" : {
        "start" : 1573514549991,
        "stop" : 1573514549992,
        "duration" : 1
      }
    }, {
      "uid" : "5d55ae4ccdc102f8",
      "status" : "passed",
      "time" : {
        "start" : 1573189085090,
        "stop" : 1573189085092,
        "duration" : 2
      }
    }, {
      "uid" : "2b6532ae2631293f",
      "status" : "passed",
      "time" : {
        "start" : 1573180172952,
        "stop" : 1573180172957,
        "duration" : 5
      }
    }, {
      "uid" : "6071fd65715de0c0",
      "status" : "passed",
      "time" : {
        "start" : 1573079195970,
        "stop" : 1573079195972,
        "duration" : 2
      }
    }, {
      "uid" : "a4e11eb15022c13b",
      "status" : "passed",
      "time" : {
        "start" : 1573078942416,
        "stop" : 1573078942419,
        "duration" : 3
      }
    }, {
      "uid" : "640f71b62bede029",
      "status" : "passed",
      "time" : {
        "start" : 1573078483475,
        "stop" : 1573078483476,
        "duration" : 1
      }
    }, {
      "uid" : "e69245201dd52c9d",
      "status" : "passed",
      "time" : {
        "start" : 1573073328942,
        "stop" : 1573073328943,
        "duration" : 1
      }
    }, {
      "uid" : "a61c71db3578d0fb",
      "status" : "passed",
      "time" : {
        "start" : 1573071121274,
        "stop" : 1573071121276,
        "duration" : 2
      }
    } ],
    "categories" : [ ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 12,
        "unknown" : 0,
        "total" : 12
      },
      "items" : [ {
        "uid" : "20c6e6135848cf43",
        "status" : "passed",
        "time" : {
          "start" : 1574018663678,
          "stop" : 1574018663679,
          "duration" : 1
        }
      }, {
        "uid" : "901971e8969cd656",
        "status" : "passed",
        "time" : {
          "start" : 1573966633111,
          "stop" : 1573966633112,
          "duration" : 1
        }
      }, {
        "uid" : "ac79db2d2610f250",
        "status" : "passed",
        "time" : {
          "start" : 1573956297003,
          "stop" : 1573956297005,
          "duration" : 2
        }
      }, {
        "uid" : "90f88c2186fd2a0c",
        "status" : "passed",
        "time" : {
          "start" : 1573517399924,
          "stop" : 1573517399925,
          "duration" : 1
        }
      }, {
        "uid" : "5b4e67753c7c1480",
        "status" : "passed",
        "time" : {
          "start" : 1573514549991,
          "stop" : 1573514549992,
          "duration" : 1
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "7fe020763e46dc31.json",
  "parameterValues" : [ ]
}