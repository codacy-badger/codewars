{
  "uid" : "3e06659ae82721e6",
  "name" : "Testing stock_list function",
  "fullName" : "kyu_6.help_the_bookseller.test_stock_list.StockListTestCase#test_stock_list",
  "historyId" : "69736adb645541830719370905336c42",
  "time" : {
    "start" : 1581908960115,
    "stop" : 1581908960118,
    "duration" : 3
  },
  "descriptionHtml" : "<h3>Codewars badge:</h3><img src=\"https://www.codewars.com/users/myFirstCode/badges/large\"><h3>Test Description:</h3><p>You will be given a stocklist (e.g. : L) and a list of categories in capital letters. Your task is to verify that the function finds all the books of L with codes belonging to each category of M and to sum their quantity according to each category.</p>",
  "status" : "passed",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "_UnitTestCase__pytest_class_setup",
    "time" : {
      "start" : 1581908960114,
      "stop" : 1581908960114,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  } ],
  "testStage" : {
    "descriptionHtml" : "<h3>Codewars badge:</h3><img src=\"https://www.codewars.com/users/myFirstCode/badges/large\"><h3>Test Description:</h3><p>You will be given a stocklist (e.g. : L) and a list of categories in capital letters. Your task is to verify that the function finds all the books of L with codes belonging to each category of M and to sum their quantity according to each category.</p>",
    "status" : "passed",
    "steps" : [ {
      "name" : "Enter test data (['ABAR 200', 'CDXE 500', 'BKWR 250', 'BTSQ 890', 'DRTY 600'], ['A', 'B']) and verify the expected output ((A : 200) - (B : 1140)) vs actual result ((A : 200) - (B : 1140))",
      "time" : {
        "start" : 1581908960115,
        "stop" : 1581908960116,
        "duration" : 1
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "hasContent" : false,
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false
    }, {
      "name" : "Enter test data (['BBAR 150', 'CDXE 515', 'BKWR 250', 'BTSQ 890', 'DRTY 600'], ['A', 'B', 'C', 'D']) and verify the expected output ((A : 0) - (B : 1290) - (C : 515) - (D : 600)) vs actual result ((A : 0) - (B : 1290) - (C : 515) - (D : 600))",
      "time" : {
        "start" : 1581908960116,
        "stop" : 1581908960116,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "hasContent" : false,
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false
    }, {
      "name" : "Enter test data (['CBART 20', 'CDXEF 50', 'BKWRK 25', 'BTSQZ 89', 'DRTYM 60'], ['A', 'B', 'C', 'W']) and verify the expected output ((A : 0) - (B : 114) - (C : 70) - (W : 0)) vs actual result ((A : 0) - (B : 114) - (C : 70) - (W : 0))",
      "time" : {
        "start" : 1581908960116,
        "stop" : 1581908960116,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "hasContent" : false,
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false
    }, {
      "name" : "Enter test data (['ROXANNE 102', 'RHODODE 123', 'BKWRKAA 125', 'BTSQZFG 239', 'DRTYMKH 060'], ['B', 'R', 'D', 'X']) and verify the expected output ((B : 364) - (R : 225) - (D : 60) - (X : 0)) vs actual result ((B : 364) - (R : 225) - (D : 60) - (X : 0))",
      "time" : {
        "start" : 1581908960116,
        "stop" : 1581908960116,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "hasContent" : false,
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false
    }, {
      "name" : "Enter test data (['ROXANNE 102', 'RHODODE 123', 'BKWRKAA 125', 'BTSQZFG 239', 'DRTYMKH 060'], ['U', 'V', 'R']) and verify the expected output ((U : 0) - (V : 0) - (R : 225)) vs actual result ((U : 0) - (V : 0) - (R : 225))",
      "time" : {
        "start" : 1581908960116,
        "stop" : 1581908960116,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "hasContent" : false,
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false
    }, {
      "name" : "Enter test data ([], ['B', 'R', 'D', 'X']) and verify the expected output () vs actual result ()",
      "time" : {
        "start" : 1581908960116,
        "stop" : 1581908960117,
        "duration" : 1
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "hasContent" : false,
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false
    } ],
    "attachments" : [ {
      "uid" : "85b0b7744a023e0",
      "name" : "stdout",
      "source" : "85b0b7744a023e0.txt",
      "type" : "text/plain",
      "size" : 1127
    } ],
    "parameters" : [ ],
    "hasContent" : true,
    "stepsCount" : 6,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false
  },
  "afterStages" : [ {
    "name" : "_UnitTestCase__pytest_class_setup::0",
    "time" : {
      "start" : 1581908960120,
      "stop" : 1581908960120,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  } ],
  "labels" : [ {
    "name" : "severity",
    "value" : "normal"
  }, {
    "name" : "tag",
    "value" : "ALGORITHMS"
  }, {
    "name" : "tag",
    "value" : "FUNDAMENTALS"
  }, {
    "name" : "suite",
    "value" : "Fundamentals"
  }, {
    "name" : "subSuite",
    "value" : "Unit Tests"
  }, {
    "name" : "parentSuite",
    "value" : "Novice"
  }, {
    "name" : "story",
    "value" : "Help the bookseller !"
  }, {
    "name" : "epic",
    "value" : "6 kyu"
  }, {
    "name" : "feature",
    "value" : "Algorithms"
  }, {
    "name" : "host",
    "value" : "DESKTOP-RJASUD2"
  }, {
    "name" : "thread",
    "value" : "936-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "kyu_6.help_the_bookseller.test_stock_list"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ {
    "name" : "Source/Kata",
    "url" : "https://www.codewars.com/kata/54dc6f5a224c26032800005c/train/python",
    "type" : "link"
  } ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ {
      "uid" : "41af7d255f0ef419",
      "status" : "passed",
      "time" : {
        "start" : 1581897530784,
        "stop" : 1581897530786,
        "duration" : 2
      }
    }, {
      "uid" : "d2ea3853efb5cdc8",
      "status" : "passed",
      "time" : {
        "start" : 1581829131130,
        "stop" : 1581829131132,
        "duration" : 2
      }
    }, {
      "uid" : "432af44902df78cc",
      "status" : "passed",
      "time" : {
        "start" : 1581828904555,
        "stop" : 1581828904556,
        "duration" : 1
      }
    }, {
      "uid" : "ecdb17e3ab92d092",
      "status" : "passed",
      "time" : {
        "start" : 1581827422693,
        "stop" : 1581827422695,
        "duration" : 2
      }
    }, {
      "uid" : "3662e10117a1bf5e",
      "status" : "passed",
      "time" : {
        "start" : 1580696889363,
        "stop" : 1580696889365,
        "duration" : 2
      }
    }, {
      "uid" : "e8759a5e853b569f",
      "status" : "passed",
      "time" : {
        "start" : 1580694858800,
        "stop" : 1580694858803,
        "duration" : 3
      }
    }, {
      "uid" : "6dedf6223d4a1673",
      "status" : "passed",
      "time" : {
        "start" : 1580694175957,
        "stop" : 1580694175961,
        "duration" : 4
      }
    }, {
      "uid" : "bdecff2827015ec2",
      "status" : "passed",
      "time" : {
        "start" : 1580588583778,
        "stop" : 1580588583779,
        "duration" : 1
      }
    } ],
    "categories" : [ ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 7,
        "unknown" : 0,
        "total" : 7
      },
      "items" : [ {
        "uid" : "64629bfc68f378d2",
        "status" : "passed",
        "time" : {
          "start" : 1581829131130,
          "stop" : 1581829131132,
          "duration" : 2
        }
      }, {
        "uid" : "be34ee4ce0d48c1e",
        "status" : "passed",
        "time" : {
          "start" : 1581827422693,
          "stop" : 1581827422695,
          "duration" : 2
        }
      }, {
        "uid" : "1ce4fa92d14c9f60",
        "status" : "passed",
        "time" : {
          "start" : 1580696889363,
          "stop" : 1580696889365,
          "duration" : 2
        }
      }, {
        "uid" : "e3d5ccfc1efdc921",
        "status" : "passed",
        "time" : {
          "start" : 1580694858800,
          "stop" : 1580694858803,
          "duration" : 3
        }
      }, {
        "uid" : "82b491ed7f8d4cec",
        "status" : "passed",
        "time" : {
          "start" : 1580694175957,
          "stop" : 1580694175961,
          "duration" : 4
        }
      } ]
    },
    "tags" : [ "FUNDAMENTALS", "ALGORITHMS" ]
  },
  "source" : "3e06659ae82721e6.json",
  "parameterValues" : [ ]
}