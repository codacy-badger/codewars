{
  "uid" : "1e7b96830f397da9",
  "name" : "Testing dirReduc function",
  "fullName" : "kyu_5.directions_reduction.test_directions_reduction.DirectionsReductionTestCase#test_directions_reduction",
  "historyId" : "250e37eef35f96fa2557cde52e0899db",
  "time" : {
    "start" : 1579417126856,
    "stop" : 1579417126859,
    "duration" : 3
  },
  "description" : "\n        Test a function dirReduc which will take an array of\n        strings and returns an array of strings with the needless\n        directions removed (W<->E or S<->N side by side).\n\n        The Haskell version takes a list of directions with\n        data Direction = North | East | West | South.\n\n        The Clojure version returns nil when the path is\n        reduced to nothing.\n\n        The Rust version takes a slice of enum Direction\n        {NORTH, SOUTH, EAST, WEST}.\n        :return:\n        ",
  "descriptionHtml" : "<pre><code>    Test a function dirReduc which will take an array of\n    strings and returns an array of strings with the needless\n    directions removed (W&lt;-&gt;E or S&lt;-&gt;N side by side).\n\n    The Haskell version takes a list of directions with\n    data Direction = North | East | West | South.\n\n    The Clojure version returns nil when the path is\n    reduced to nothing.\n\n    The Rust version takes a slice of enum Direction\n    {NORTH, SOUTH, EAST, WEST}.\n    :return:\n</code></pre>\n",
  "status" : "passed",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "_UnitTestCase__pytest_class_setup",
    "time" : {
      "start" : 1579417126855,
      "stop" : 1579417126855,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0,
    "hasContent" : false,
    "stepsCount" : 0
  } ],
  "testStage" : {
    "description" : "\n        Test a function dirReduc which will take an array of\n        strings and returns an array of strings with the needless\n        directions removed (W<->E or S<->N side by side).\n\n        The Haskell version takes a list of directions with\n        data Direction = North | East | West | South.\n\n        The Clojure version returns nil when the path is\n        reduced to nothing.\n\n        The Rust version takes a slice of enum Direction\n        {NORTH, SOUTH, EAST, WEST}.\n        :return:\n        ",
    "status" : "passed",
    "steps" : [ {
      "name" : "Enter test data (list) and verify the output",
      "time" : {
        "start" : 1579417126857,
        "stop" : 1579417126858,
        "duration" : 1
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "shouldDisplayMessage" : false,
      "attachmentsCount" : 0,
      "hasContent" : false,
      "stepsCount" : 0
    } ],
    "attachments" : [ {
      "uid" : "631fd5413c6e62b5",
      "name" : "stdout",
      "source" : "631fd5413c6e62b5.txt",
      "type" : "text/plain",
      "size" : 194
    } ],
    "parameters" : [ ],
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 1,
    "hasContent" : true,
    "stepsCount" : 1
  },
  "afterStages" : [ {
    "name" : "_UnitTestCase__pytest_class_setup::0",
    "time" : {
      "start" : 1579417126862,
      "stop" : 1579417126862,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0,
    "hasContent" : false,
    "stepsCount" : 0
  } ],
  "labels" : [ {
    "name" : "severity",
    "value" : "normal"
  }, {
    "name" : "feature",
    "value" : "Lists"
  }, {
    "name" : "parentSuite",
    "value" : "Novice"
  }, {
    "name" : "tag",
    "value" : "FUNDAMENTALS"
  }, {
    "name" : "epic",
    "value" : "5 kyu"
  }, {
    "name" : "subSuite",
    "value" : "Unit Tests"
  }, {
    "name" : "story",
    "value" : "Directions Reduction"
  }, {
    "name" : "suite",
    "value" : "Algorithms"
  }, {
    "name" : "host",
    "value" : "DESKTOP-RJASUD2"
  }, {
    "name" : "thread",
    "value" : "7264-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "kyu_5.directions_reduction.test_directions_reduction"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ {
    "name" : "Source/Kata",
    "url" : "https://www.codewars.com/kata/550f22f4d758534c1100025a/train/python",
    "type" : "link"
  } ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ {
      "uid" : "599f132b3e4965df",
      "status" : "passed",
      "time" : {
        "start" : 1579416090455,
        "stop" : 1579416090457,
        "duration" : 2
      }
    }, {
      "uid" : "5f278b5bfc57f7bb",
      "status" : "passed",
      "time" : {
        "start" : 1579407048704,
        "stop" : 1579407048706,
        "duration" : 2
      }
    }, {
      "uid" : "4371735328d5862b",
      "status" : "passed",
      "time" : {
        "start" : 1579406490979,
        "stop" : 1579406490981,
        "duration" : 2
      }
    }, {
      "uid" : "1caaf48976fbd6d7",
      "status" : "passed",
      "time" : {
        "start" : 1579406085953,
        "stop" : 1579406085954,
        "duration" : 1
      }
    }, {
      "uid" : "3fb2e5ca994c29cf",
      "status" : "passed",
      "time" : {
        "start" : 1579151844889,
        "stop" : 1579151844890,
        "duration" : 1
      }
    }, {
      "uid" : "5c14ea9838ff3a5f",
      "status" : "passed",
      "time" : {
        "start" : 1578812684683,
        "stop" : 1578812684684,
        "duration" : 1
      }
    }, {
      "uid" : "c8353a8503661530",
      "status" : "passed",
      "time" : {
        "start" : 1578810674081,
        "stop" : 1578810674083,
        "duration" : 2
      }
    }, {
      "uid" : "faabbdac31a708c2",
      "status" : "passed",
      "time" : {
        "start" : 1578810574237,
        "stop" : 1578810574238,
        "duration" : 1
      }
    }, {
      "uid" : "2d7ccbe3f24a4a12",
      "status" : "passed",
      "time" : {
        "start" : 1578810138165,
        "stop" : 1578810138167,
        "duration" : 2
      }
    }, {
      "uid" : "72b4b585cfcf5d3c",
      "status" : "passed",
      "time" : {
        "start" : 1578809489476,
        "stop" : 1578809489477,
        "duration" : 1
      }
    }, {
      "uid" : "9e293a4b1d32be35",
      "status" : "passed",
      "time" : {
        "start" : 1578808951220,
        "stop" : 1578808951221,
        "duration" : 1
      }
    }, {
      "uid" : "bc6ecf25e146a182",
      "status" : "passed",
      "time" : {
        "start" : 1578808370033,
        "stop" : 1578808370035,
        "duration" : 2
      }
    }, {
      "uid" : "dc9fc5864dc6a27a",
      "status" : "passed",
      "time" : {
        "start" : 1578803682880,
        "stop" : 1578803682881,
        "duration" : 1
      }
    }, {
      "uid" : "7d81e2ccdfbb1e63",
      "status" : "passed",
      "time" : {
        "start" : 1578802613775,
        "stop" : 1578802613777,
        "duration" : 2
      }
    }, {
      "uid" : "efe5037610f889bc",
      "status" : "passed",
      "time" : {
        "start" : 1578801841616,
        "stop" : 1578801841617,
        "duration" : 1
      }
    }, {
      "uid" : "35299275401cdb2f",
      "status" : "passed",
      "time" : {
        "start" : 1577672192281,
        "stop" : 1577672192282,
        "duration" : 1
      }
    }, {
      "uid" : "4b05b97e1060536b",
      "status" : "passed",
      "time" : {
        "start" : 1577669953333,
        "stop" : 1577669953333,
        "duration" : 0
      }
    }, {
      "uid" : "89bcd2add230871b",
      "status" : "passed",
      "time" : {
        "start" : 1577327508917,
        "stop" : 1577327508918,
        "duration" : 1
      }
    }, {
      "uid" : "c47bca24192b7746",
      "status" : "passed",
      "time" : {
        "start" : 1577321735589,
        "stop" : 1577321735591,
        "duration" : 2
      }
    }, {
      "uid" : "96e4f7f413b8ebb2",
      "status" : "passed",
      "time" : {
        "start" : 1577063533944,
        "stop" : 1577063533945,
        "duration" : 1
      }
    }, {
      "uid" : "e0241a1b622cf9c9",
      "status" : "passed",
      "time" : {
        "start" : 1577062098877,
        "stop" : 1577062098877,
        "duration" : 0
      }
    } ],
    "categories" : [ ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 22,
        "unknown" : 0,
        "total" : 22
      },
      "items" : [ {
        "uid" : "4c2654ac9f006ab8",
        "status" : "passed",
        "time" : {
          "start" : 1579416090455,
          "stop" : 1579416090457,
          "duration" : 2
        }
      }, {
        "uid" : "b7355eef56529bc8",
        "status" : "passed",
        "time" : {
          "start" : 1579407048704,
          "stop" : 1579407048706,
          "duration" : 2
        }
      }, {
        "uid" : "a88701c71c030a0a",
        "status" : "passed",
        "time" : {
          "start" : 1579406085953,
          "stop" : 1579406085954,
          "duration" : 1
        }
      }, {
        "uid" : "8a9d01dff58a9f16",
        "status" : "passed",
        "time" : {
          "start" : 1579151844889,
          "stop" : 1579151844890,
          "duration" : 1
        }
      }, {
        "uid" : "4595f561031f5acc",
        "status" : "passed",
        "time" : {
          "start" : 1578812684683,
          "stop" : 1578812684684,
          "duration" : 1
        }
      } ]
    },
    "tags" : [ "FUNDAMENTALS" ]
  },
  "source" : "1e7b96830f397da9.json",
  "parameterValues" : [ ]
}