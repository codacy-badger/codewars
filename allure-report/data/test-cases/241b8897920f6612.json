{
  "uid" : "241b8897920f6612",
  "name" : "Testing two_decimal_places function",
  "fullName" : "kyu_7.formatting_decimal_places_1.test_two_decimal_places.TwoDecimalPlacesTestCase#test_two_decimal_places",
  "historyId" : "15fae8047ca0fd5a3fd5d8163999631a",
  "time" : {
    "start" : 1572577218467,
    "stop" : 1572577218469,
    "duration" : 2
  },
  "description" : "\n\t\tTesting two_decimal_places function\n\t\twith various test inputs\n\n\t\tEach floating-point number should be\n\t\tformatted that only the first two\n\t\tdecimal places are returned.\n\n\t\tYou don't need to check whether the input\n\t\tis a valid number because only valid numbers\n\t\tare used in the tests.\n\n\t\tDon't round the numbers! Just cut them\n\t\tafter two decimal places!\n\t\t:return:\n\t\t",
  "descriptionHtml" : "<pre><code>\tTesting two_decimal_places function\n\twith various test inputs\n\n\tEach floating-point number should be\n\tformatted that only the first two\n\tdecimal places are returned.\n\n\tYou don't need to check whether the input\n\tis a valid number because only valid numbers\n\tare used in the tests.\n\n\tDon't round the numbers! Just cut them\n\tafter two decimal places!\n\t:return:\n</code></pre>\n",
  "status" : "passed",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "_UnitTestCase__pytest_class_setup",
    "time" : {
      "start" : 1572577218465,
      "stop" : 1572577218465,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  } ],
  "testStage" : {
    "description" : "\n\t\tTesting two_decimal_places function\n\t\twith various test inputs\n\n\t\tEach floating-point number should be\n\t\tformatted that only the first two\n\t\tdecimal places are returned.\n\n\t\tYou don't need to check whether the input\n\t\tis a valid number because only valid numbers\n\t\tare used in the tests.\n\n\t\tDon't round the numbers! Just cut them\n\t\tafter two decimal places!\n\t\t:return:\n\t\t",
    "status" : "passed",
    "steps" : [ {
      "name" : "Pass a number and verify the output",
      "time" : {
        "start" : 1572577218468,
        "stop" : 1572577218468,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "hasContent" : false,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false
    } ],
    "attachments" : [ {
      "uid" : "b8c83fa98f626c5b",
      "name" : "stdout",
      "source" : "b8c83fa98f626c5b.txt",
      "type" : "text/plain",
      "size" : 148
    } ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "hasContent" : true,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false
  },
  "afterStages" : [ {
    "name" : "_UnitTestCase__pytest_class_setup::0",
    "time" : {
      "start" : 1572577218471,
      "stop" : 1572577218471,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  } ],
  "labels" : [ {
    "name" : "severity",
    "value" : "critical"
  }, {
    "name" : "story",
    "value" : "Formatting decimal places #1"
  }, {
    "name" : "suite",
    "value" : "Data Structures"
  }, {
    "name" : "subSuite",
    "value" : "Unit Tests"
  }, {
    "name" : "parentSuite",
    "value" : "Beginner"
  }, {
    "name" : "feature",
    "value" : "Formatting"
  }, {
    "name" : "epic",
    "value" : "7 kyu"
  }, {
    "name" : "host",
    "value" : "DESKTOP-RJASUD2"
  }, {
    "name" : "thread",
    "value" : "21856-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "kyu_7.formatting_decimal_places_1.test_two_decimal_places"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "critical",
    "retries" : [ {
      "uid" : "a31c2f61e0fdb9a7",
      "status" : "passed",
      "time" : {
        "start" : 1572577072238,
        "stop" : 1572577072239,
        "duration" : 1
      }
    }, {
      "uid" : "a8c3882fe7e96ce9",
      "status" : "passed",
      "time" : {
        "start" : 1572577032497,
        "stop" : 1572577032498,
        "duration" : 1
      }
    }, {
      "uid" : "894638b276cfa766",
      "status" : "passed",
      "time" : {
        "start" : 1572574524245,
        "stop" : 1572574524247,
        "duration" : 2
      }
    }, {
      "uid" : "7291c64ef954afa9",
      "status" : "passed",
      "time" : {
        "start" : 1572494544483,
        "stop" : 1572494544484,
        "duration" : 1
      }
    }, {
      "uid" : "b38faa00c3c9c23a",
      "status" : "passed",
      "time" : {
        "start" : 1572493349159,
        "stop" : 1572493349160,
        "duration" : 1
      }
    } ],
    "categories" : [ ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 3,
        "unknown" : 0,
        "total" : 3
      },
      "items" : [ {
        "uid" : "3924d9df42503627",
        "status" : "passed",
        "time" : {
          "start" : 1572494544483,
          "stop" : 1572494544484,
          "duration" : 1
        }
      }, {
        "uid" : "ea45185e1b53379d",
        "status" : "passed",
        "time" : {
          "start" : 1572493349159,
          "stop" : 1572493349160,
          "duration" : 1
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "241b8897920f6612.json",
  "parameterValues" : [ ]
}