{
  "uid" : "1e9525dce71225db",
  "name" : "Testing gap function",
  "fullName" : "kyu_7.find_the_longest_gap.test_gap.GapTestCase#test_gap",
  "historyId" : "32fca0dba156c29ff0c5aa5efe4a761f",
  "time" : {
    "start" : 1581827423381,
    "stop" : 1581827423382,
    "duration" : 1
  },
  "description" : "\n        Testing gap function with various test inputs\n\n        A binary gap within a positive number num is\n        any sequence of consecutive zeros that is\n        surrounded by ones at both ends in the binary\n        representation of num.\n\n        The gap function should return the length of\n        its longest binary gap.\n\n        The function should return 0 if num doesn't\n        contain a binary gap.\n        :return:\n        ",
  "descriptionHtml" : "<pre><code>    Testing gap function with various test inputs\n\n    A binary gap within a positive number num is\n    any sequence of consecutive zeros that is\n    surrounded by ones at both ends in the binary\n    representation of num.\n\n    The gap function should return the length of\n    its longest binary gap.\n\n    The function should return 0 if num doesn't\n    contain a binary gap.\n    :return:\n</code></pre>\n",
  "status" : "passed",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "_UnitTestCase__pytest_class_setup",
    "time" : {
      "start" : 1581827423379,
      "stop" : 1581827423379,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  } ],
  "testStage" : {
    "description" : "\n        Testing gap function with various test inputs\n\n        A binary gap within a positive number num is\n        any sequence of consecutive zeros that is\n        surrounded by ones at both ends in the binary\n        representation of num.\n\n        The gap function should return the length of\n        its longest binary gap.\n\n        The function should return 0 if num doesn't\n        contain a binary gap.\n        :return:\n        ",
    "status" : "passed",
    "steps" : [ {
      "name" : "Enter integer and assert the result",
      "time" : {
        "start" : 1581827423381,
        "stop" : 1581827423382,
        "duration" : 1
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "hasContent" : false,
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false
    } ],
    "attachments" : [ {
      "uid" : "5f51a383cec41f8a",
      "name" : "stdout",
      "source" : "5f51a383cec41f8a.txt",
      "type" : "text/plain",
      "size" : 120
    } ],
    "parameters" : [ ],
    "hasContent" : true,
    "stepsCount" : 1,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false
  },
  "afterStages" : [ {
    "name" : "_UnitTestCase__pytest_class_setup::0",
    "time" : {
      "start" : 1581827423385,
      "stop" : 1581827423385,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  } ],
  "labels" : [ {
    "name" : "severity",
    "value" : "normal"
  }, {
    "name" : "parentSuite",
    "value" : "Beginner"
  }, {
    "name" : "feature",
    "value" : "String"
  }, {
    "name" : "story",
    "value" : "Find the longest gap!"
  }, {
    "name" : "subSuite",
    "value" : "Unit Tests"
  }, {
    "name" : "suite",
    "value" : "Advanced Language Features"
  }, {
    "name" : "epic",
    "value" : "7 kyu"
  }, {
    "name" : "host",
    "value" : "DESKTOP-RJASUD2"
  }, {
    "name" : "thread",
    "value" : "11052-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "kyu_7.find_the_longest_gap.test_gap"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ {
    "name" : "Source/Kata",
    "type" : "link"
  } ],
  "hidden" : true,
  "retry" : true,
  "extra" : {
    "categories" : [ ],
    "tags" : [ ]
  },
  "source" : "1e9525dce71225db.json",
  "parameterValues" : [ ]
}