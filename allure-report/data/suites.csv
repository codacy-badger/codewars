"Status","Start Time","Stop Time","Duration in ms","Parent Suite","Suite","Sub Suite","Test Class","Test Method","Name","Description"
"passed","Sun Dec 01 11:19:19 PST 2019","Sun Dec 01 11:19:19 PST 2019","1","Beginner","Math","Unit Tests","","","goals function verification","
		Verify that the function returns Messi's
		total number of goals in all three leagues.
		:return:
		"
"passed","Sun Dec 01 11:19:17 PST 2019","Sun Dec 01 11:19:17 PST 2019","1","Novice","Data Structures","Unit Tests","","","Find the int that appears an odd number of times","
		Sample testing.
		Expected result is 5
		:return:
		"
"passed","Sun Dec 01 11:19:19 PST 2019","Sun Dec 01 11:19:19 PST 2019","1","Beginner","Data Structures","Unit Tests","","","Negative non consecutive number should be returned","
		non-consecutive is a negative number.
		:return:
		"
"passed","Sun Dec 01 11:19:17 PST 2019","Sun Dec 01 11:19:17 PST 2019","1","Novice","Algorithms","Unit Tests","","","String alphabet chars and spaces","
        Repeating char is a space
        :return:
        "
"passed","Sun Dec 01 11:19:17 PST 2019","Sun Dec 01 11:19:17 PST 2019","3","Novice","Algorithms","Unit Tests","","","Testing duplicate_encode function","
		Testing duplicate_encode function
		with various test inputs
		:return:
		"
"passed","Sun Dec 01 11:19:19 PST 2019","Sun Dec 01 11:19:19 PST 2019","1","Beginner","Data Structures","Unit Tests","","","Test with empty string","
		Test with empty string
		:return:
		"
"passed","Sun Dec 01 11:19:19 PST 2019","Sun Dec 01 11:19:19 PST 2019","1","Beginner","Data Structures","Unit Tests","","","Should return 'I smell a series!'","
		if there are more than 2 return
		'I smell a series!'.
		:return:
		"
"passed","Sun Dec 01 11:19:19 PST 2019","Sun Dec 01 11:19:19 PST 2019","2","Beginner","Control Flow","Unit Tests","","","Wolf at the end of the queue","
		If the wolf is not the closest animal to you,
		return ""Oi! Sheep number N! You are about to be eaten by a wolf!""
		where N is the sheep's position in the queue.
		:return:
		"
"passed","Sun Dec 01 11:19:19 PST 2019","Sun Dec 01 11:19:19 PST 2019","1","Beginner","Math","Unit Tests","","","move function tests","
		The player rolls the dice and moves the number
		of spaces indicated by the dice two times.

		Pass position and roll and compare the output
		to the expected result
		:return:
		"
"passed","Sun Dec 01 11:19:19 PST 2019","Sun Dec 01 11:19:19 PST 2019","2","Beginner","Data Structures","Unit Tests","","","Large lists","
		Large lists
		:return:
		"
"passed","Sun Dec 01 11:19:19 PST 2019","Sun Dec 01 11:19:19 PST 2019","1","Beginner","Data Structures","Unit Tests","","","Testing two_decimal_places function","
		Testing two_decimal_places function
		with various test inputs.

		Each number should be formatted that it is
		rounded to two decimal places. You don't
		need to check whether the input is a valid
		number because only valid numbers are used
		in the tests.
		:return:
		"
"passed","Sun Dec 01 11:19:18 PST 2019","Sun Dec 01 11:19:18 PST 2019","0","Beginner","Algorithms","Unit Tests","","","Testing 'sum_triangular_numbers' with zero","
		Testing 'sum_triangular_numbers' function
		with zero as an input
		:return:
		"
"passed","Sun Dec 01 11:19:18 PST 2019","Sun Dec 01 11:19:18 PST 2019","1","Beginner","Advanced Language Features","Unit Tests","","","a and b are equal","
		The string ""This website is for losers LOL!""
		should become ""Ths wbst s fr lsrs LL!""
		:return:
		"
"passed","Sun Dec 01 11:19:19 PST 2019","Sun Dec 01 11:19:19 PST 2019","2","Beginner","Data Structures","Unit Tests","","","Testing period_is_late function (negative)","
		Negative tests
		:return:
		"
"passed","Sun Dec 01 11:19:18 PST 2019","Sun Dec 01 11:19:18 PST 2019","1","Beginner","Data Structures","Unit Tests","","","'multiply' function verification with one element list","
        Returns [] if list has only one element
        :return:
        "
"passed","Sun Dec 01 11:19:19 PST 2019","Sun Dec 01 11:19:19 PST 2019","1","Beginner","Math","Unit Tests","","","Non square numbers (negative)","
		3 is not a square number
		:return:
		"
"passed","Sun Dec 01 11:19:19 PST 2019","Sun Dec 01 11:19:19 PST 2019","2","Beginner","Data Structures","Unit Tests","","","Testing 'count_sheeps' function: bad input","
		Testing 'count_sheeps' function
		Hint: Don't forget to check for
		bad values like null/undefined
		:return:
		"
"passed","Sun Dec 01 11:19:18 PST 2019","Sun Dec 01 11:19:18 PST 2019","1","Beginner","Algorithms","Unit Tests","","","Testing 'sum_triangular_numbers' with positive numbers","
		Testing 'sum_triangular_numbers' function
		with positive numbers
		:return:
		"
"passed","Sun Dec 01 11:19:19 PST 2019","Sun Dec 01 11:19:19 PST 2019","2","Beginner","Data Structures","Unit Tests","","","AND logical operator","
		And (âˆ§) is the truth-functional
		operator of logical conjunction

		The and of a set of operands is true
		if and only if all of its operands are true.

		Source:
		https://en.wikipedia.org/wiki/Logical_conjunction

		:return:
		"
"passed","Sun Dec 01 11:19:19 PST 2019","Sun Dec 01 11:19:19 PST 2019","1","Beginner","Math","Unit Tests","","","You are given two angles -> find the 3rd.","
		You are given two angles (in degrees) of a triangle.
        Find the 3rd.
		:return:
		"
"passed","Sun Dec 01 11:19:19 PST 2019","Sun Dec 01 11:19:19 PST 2019","1","Beginner","Data Structures","Unit Tests","","","XOR logical operator","
		Exclusive or or exclusive disjunction is a
		logical operation that outputs true only when
		inputs differ (one is true, the other is false).

		XOR outputs true whenever the inputs differ:

		Source:
		https://en.wikipedia.org/wiki/Exclusive_or
		:return:
		"
"passed","Sun Dec 01 11:19:19 PST 2019","Sun Dec 01 11:19:19 PST 2019","1","Beginner","Fundamentals","Unit Tests","","","Testing hoop_count function (positive test case)","
		Testing hoop_count function

		Alex just got a new hula hoop, he loves it but feels
		discouraged because his little brother is better than him

		Write a program where Alex can input (n) how many times
		the hoop goes round and it will return him an encouraging message

		- If Alex gets 10 or more hoops, return the string ""Great, now move on to tricks"".
		- If he doesn't get 10 hoops, return the string ""Keep at it until you get it"".
		:return:
		"
"passed","Sun Dec 01 11:19:19 PST 2019","Sun Dec 01 11:19:19 PST 2019","1","Beginner","Math","Unit Tests","","","Testing litres function with various test inputs","
		Testing litres function with various test inputs
		:return:
		"
"passed","Sun Dec 01 11:19:19 PST 2019","Sun Dec 01 11:19:19 PST 2019","1","Beginner","Math","Unit Tests","","","get_size function tests","
		Testing get_size function with various inputs
		:return:
		"
"passed","Sun Dec 01 11:19:18 PST 2019","Sun Dec 01 11:19:18 PST 2019","1","Novice","Algorithms","Unit Tests","","","Testing digital_root function","
		In this kata, you must create a digital root function.

		A digital root is the recursive sum of all the digits
		in a number. Given n, take the sum of the digits of n.
		If that value has more than one digit, continue reducing
		in this way until a single-digit number is produced. This
		is only applicable to the natural numbers.
		:return:
		"
"passed","Sun Dec 01 11:19:18 PST 2019","Sun Dec 01 11:19:18 PST 2019","3","Beginner","Algorithms","Unit Tests","","","Testing number_of_sigfigs function","
		Testing number_of_sigfigs function
		with various test inputs
		:return:
		"
"passed","Sun Dec 01 11:19:18 PST 2019","Sun Dec 01 11:19:18 PST 2019","1","Beginner","Algorithms","Unit Tests","","","Testing largestPower function","
		Testing largestPower function
		:return:
		"
"passed","Sun Dec 01 11:19:19 PST 2019","Sun Dec 01 11:19:19 PST 2019","1","Beginner","Math","Unit Tests","","","Negative numbers","
		-1: Negative numbers cannot be square numbers
		:return:
		"
"passed","Sun Dec 01 11:19:18 PST 2019","Sun Dec 01 11:19:18 PST 2019","1","Novice","Advanced Language Features","Unit Tests","","","Testing 'has_subpattern' (part 1) function","
		String subpattern recognition I

		Verify that 'has_subpattern' function to returns
        either true/True or false/False if a string can be
        seen as the repetition of a simpler/shorter subpattern or not.
		:return:
		"
"passed","Sun Dec 01 11:19:18 PST 2019","Sun Dec 01 11:19:18 PST 2019","3","Beginner","Data Structures","Unit Tests","","","Testing first_non_repeated function with various inputs","
		Testing first_non_repeated function
		:return:
		"
"passed","Sun Dec 01 11:19:19 PST 2019","Sun Dec 01 11:19:19 PST 2019","0","Beginner","Math","Unit Tests","","","Zero","
		0 is a square number
		:return:
		"
"passed","Sun Dec 01 11:19:19 PST 2019","Sun Dec 01 11:19:19 PST 2019","2","Beginner","Data Structures","Unit Tests","","","Testing monkey_count function","
		Testing monkey_count function

		You take your son to the forest to see the monkeys.
		You know that there are a certain number there (n),
		but your son is too young to just appreciate the full
		number, he has to start counting them from 1.

		As a good parent, you will sit and count with him.
		Given the number (n), populate an array with all
		numbers up to and including that number, but excluding
		zero.
		:return:
		"
"passed","Sun Dec 01 11:19:18 PST 2019","Sun Dec 01 11:19:18 PST 2019","4","Beginner","Data Structures","Unit Tests","","","Testing length function","
		Testing length function

		The method length, which accepts a linked list
        (head), and returns the length of the list.
		:return:
		"
"passed","Sun Dec 01 11:19:17 PST 2019","Sun Dec 01 11:19:17 PST 2019","3","Novice","Algorithms","Unit Tests","","","Testing permute_a_palindrome (positive)","
		Testing permute_a_palindrome function
		:return:
		"
"passed","Sun Dec 01 11:19:19 PST 2019","Sun Dec 01 11:19:19 PST 2019","1","Beginner","Data Structures","Unit Tests","","","Testing is_palindrome function","
		Testing is_palindrome function
		with various test inputs

		The function should check if a
		given string (case insensitive)
		is a palindrome.
		"
"passed","Sun Dec 01 11:19:18 PST 2019","Sun Dec 01 11:19:18 PST 2019","1","Beginner","Data Structures","Unit Tests","","","Testing 'vaporcode' function","
        Testing 'vaporcode' function
        :return:
        "
"passed","Sun Dec 01 11:19:19 PST 2019","Sun Dec 01 11:19:19 PST 2019","1","Beginner","Data Structures","Unit Tests","","","Testing string_to_array function","
		Testing string_to_array function.

		A function to split a string and
		convert it into an array of words.
		:return:
		"
"passed","Sun Dec 01 11:19:19 PST 2019","Sun Dec 01 11:19:19 PST 2019","1","Beginner","Fundamentals","Unit Tests","","","Testing hoop_count function (negative test case)",""
"passed","Sun Dec 01 11:19:17 PST 2019","Sun Dec 01 11:19:17 PST 2019","3","Novice","Algorithms","Unit Tests","","","Testing 'numericals' function","
		Testing 'numericals' function
		:return:
		"
"passed","Sun Dec 01 11:19:18 PST 2019","Sun Dec 01 11:19:18 PST 2019","2","Beginner","Data Structures","Unit Tests","","","Testing men_from_boys function","
		Testing men_from_boys function with
		various test inputs

		Scenario
		Now that the competition gets tough it
		will Sort out the men from the boys .

		Men are the Even numbers and Boys are
		the odd !alt !alt

		Task
		Given an array/list [] of n integers ,
		Separate The even numbers from the odds ,
		or Separate the men from the boys !alt !alt

		Notes
		Return an array/list where Even numbers
		come first then odds.
		Since , Men are stronger than Boys ,
		Then Even numbers in ascending order
		While odds in descending.
		:return:
		"
"passed","Sun Dec 01 11:19:19 PST 2019","Sun Dec 01 11:19:19 PST 2019","2","Beginner","Data Structures","Unit Tests","","","Testing remove_char function","
		Test that 'remove_char' function
		removes the first and
        last characters of a string.
		:return:
		"
"passed","Sun Dec 01 11:19:19 PST 2019","Sun Dec 01 11:19:19 PST 2019","3","Beginner","Data Structures","Unit Tests","","","Test with regular string","
		Test with regular string
		:return:
		"
"passed","Sun Dec 01 11:19:19 PST 2019","Sun Dec 01 11:19:19 PST 2019","1","Beginner","Data Structures","Unit Tests","","","Testing 'count_sheeps' function: empty list","
		Testing 'count_sheeps' function
		Hint: Don't forget to check for
		bad values like empty list
		:return:
		"
"passed","Sun Dec 01 11:19:18 PST 2019","Sun Dec 01 11:19:18 PST 2019","1","Beginner","Data Structures","Unit Tests","","","'multiply' function verification: lists with multiple digits","
        Test lists with multiple digits
        :return:
        "
"passed","Sun Dec 01 11:19:17 PST 2019","Sun Dec 01 11:19:17 PST 2019","1","Novice","Algorithms","Unit Tests","","","All chars are in lower case","
        Testing letter_frequency function
        where all chars are in lower case
        :return:
        "
"passed","Sun Dec 01 11:19:18 PST 2019","Sun Dec 01 11:19:18 PST 2019","1","Beginner","Data Structures","Unit Tests","","","Testing invite_more_women function (negative)","
		Simple Fun #152: Invite More Women?
		Testing invite_more_women function (negative)
		:return:
		"
"passed","Sun Dec 01 11:19:18 PST 2019","Sun Dec 01 11:19:18 PST 2019","2","Beginner","Data Structures","Unit Tests","","","Testing 'save' function: positive","
        Testing 'save' function: positive

        The function should determine how many
        files of the copy queue you will be able
        to save into your Hard Disk Drive.
        :return:
        "
"passed","Sun Dec 01 11:19:19 PST 2019","Sun Dec 01 11:19:19 PST 2019","1","Beginner","Data Structures","Unit Tests","","","OR logical operator","
		In logic and mathematics, or is the
		truth-functional operator of (inclusive)
		disjunction, also known as alternation.

		The or of a set of operands is true if
		and only if one or more of its operands is true.

		Source:
		https://en.wikipedia.org/wiki/Logical_disjunction

		:return:
		"
"passed","Sun Dec 01 11:19:19 PST 2019","Sun Dec 01 11:19:19 PST 2019","2","Beginner","Data Structures","Unit Tests","","","Test that no_space function removes the spaces","
		Test that no_space function removes the spaces
		from the string, then return the resultant string.
		:return:
		"
"passed","Sun Dec 01 11:19:18 PST 2019","Sun Dec 01 11:19:18 PST 2019","2","Beginner","Advanced Language Features","Unit Tests","","","Testing gap function","
		Testing gap function with various test inputs

		A binary gap within a positive number num is
		any sequence of consecutive zeros that is
		surrounded by ones at both ends in the binary
		representation of num.

		The gap function should return the length of
		its longest binary gap.

		The function should return 0 if num doesn't
		contain a binary gap.
		:return:
		"
"passed","Sun Dec 01 11:19:17 PST 2019","Sun Dec 01 11:19:17 PST 2019","1","Novice","Algorithms","Unit Tests","","","Testing pig_it function","
		Testing pig_it function

		The function should mpve the first letter of each
		word to the end of it, then add ""ay"" to the end
		of the word. Leave punctuation marks untouched.
		:return:
		"
"passed","Sun Dec 01 11:19:19 PST 2019","Sun Dec 01 11:19:19 PST 2019","1","Beginner","Math","Unit Tests","","","'multiply' function verification","
        Verify that multiply function
		returns correct result
		:return:
		"
"passed","Sun Dec 01 11:19:18 PST 2019","Sun Dec 01 11:19:18 PST 2019","2","Beginner","Data Structures","Unit Tests","","","'multiply' function verification with empty list","
        Test with empty list
        :return:
        "
"passed","Sun Dec 01 11:19:17 PST 2019","Sun Dec 01 11:19:17 PST 2019","1","Novice","Algorithms","Unit Tests","","","Testing all_fibonacci_numbers function","
		Testing all_fibonacci_numbers function

		You're going to provide a needy programmer a
		utility method that generates an infinite sized,
		sequential IntStream (in Python generator)
		which contains all the numbers in a fibonacci
		sequence.

		A fibonacci sequence starts with two 1s.
		Every element afterwards is the sum of
		the two previous elements.
		:return:
		"
"passed","Sun Dec 01 11:19:18 PST 2019","Sun Dec 01 11:19:18 PST 2019","1","Novice","Advanced Language Features","Unit Tests","","","Testing the 'unique_in_order' function","
		Testing the 'unique_in_order' function
		with various test data
		:return:
		"
"passed","Sun Dec 01 11:19:18 PST 2019","Sun Dec 01 11:19:18 PST 2019","1","Beginner","Data Structures","Unit Tests","","","Testing 'solution' function","
		Testing 'solution' function.

		The should return a formatted string.
		The return value should equal ""Value is VALUE""
		where value is a 5 digit padded number.
		:return:
		"
"passed","Sun Dec 01 11:19:18 PST 2019","Sun Dec 01 11:19:18 PST 2019","3","Beginner","Data Structures","Unit Tests","","","'multiply' function verification with random list","
        Returns a list that misses only one element
        :return:
        "
"passed","Sun Dec 01 11:19:18 PST 2019","Sun Dec 01 11:19:18 PST 2019","1","Beginner","Algorithms","Unit Tests","","","a and b are equal","
		a and b are equal
		:return:
		"
"passed","Sun Dec 01 11:19:18 PST 2019","Sun Dec 01 11:19:18 PST 2019","3","Beginner","Data Structures","Unit Tests","","","Testing password function","
		Testing password function with various test inputs
		:return:
		"
"passed","Sun Dec 01 11:19:19 PST 2019","Sun Dec 01 11:19:19 PST 2019","1","Beginner","Data Structures","Unit Tests","","","Testing make_upper_case function","
		Sample Tests for make_upper_case function
		:return:
		"
"passed","Sun Dec 01 11:19:17 PST 2019","Sun Dec 01 11:19:17 PST 2019","2","Novice","Advanced Language Features","Unit Tests","","","Testing alphabet_war function","
		Testing alphabet_war function

		Introduction
		There is a war and nobody knows - the alphabet war!
		The letters hide in their nuclear shelters. The
		nuclear strikes hit the battlefield and killed a
		lot of them.

		Task
		Write a function that accepts battlefield string
		and returns letters that survived the nuclear strike.

		1. The battlefield string consists of only small letters, #,[ and ].

		2. The nuclear shelter is represented by square brackets [].
		The letters inside the square brackets represent letters
		inside the shelter.

		3. The # means a place where nuclear strike hit the battlefield.
		If there is at least one # on the battlefield, all letters outside
		of shelter die. When there is no any # on the battlefield, all letters
		survive (but do not expect such scenario too often ;-P ).

		4. The shelters have some durability. When 2 or more # hit close to
		the shelter, the shelter is destroyed and all letters inside evaporate.
		The 'close to the shelter' means on the ground between the shelter and
		the next shelter (or beginning/end of battlefield). The below samples
		make it clear for you.
		:return:
		"
"passed","Sun Dec 01 11:19:17 PST 2019","Sun Dec 01 11:19:17 PST 2019","1","Novice","Algorithms","Unit Tests","","","String with alphabet chars only","
        Test string with alphabet chars only
        :return:
        "
"passed","Sun Dec 01 11:19:17 PST 2019","Sun Dec 01 11:19:17 PST 2019","2","Novice","Algorithms","Unit Tests","","","String with no duplicate chars","
        Test string with no duplicate chars
        :return:
        "
"passed","Sun Dec 01 11:19:17 PST 2019","Sun Dec 01 11:19:17 PST 2019","1","Novice","Algorithms","Unit Tests","","","Testing the 'solution' function","
		Testing solution function

		If we list all the natural numbers below 10
		that are multiples of 3 or 5, we get 3, 5, 6 and 9.
		The sum of these multiples is 23.

		Finish the solution so that it returns the sum of
		all the multiples of 3 or 5 below the number passed in.

		Note: If the number is a multiple of both 3 and 5,
		only count it once.
		:return:
		"
"passed","Sun Dec 01 11:19:18 PST 2019","Sun Dec 01 11:19:18 PST 2019","2","Beginner","Algorithms","Unit Tests","","","a or b is negative","
		a or b is negative
		:return:
		"
"skipped","Sun Dec 01 11:19:17 PST 2019","Sun Dec 01 11:19:17 PST 2019","0","Novice","Algorithms","Unit Tests","","","test_ips_between","
		Testing ips_between function

		Testing a function that receives two IPv4 addresses,
		and returns the number of addresses between them
		(including the first one, excluding the last one).

		All inputs will be valid IPv4 addresses in the form
		of strings. The last address will always be greater
		than the first one.
		:return:
		"
"passed","Sun Dec 01 11:19:19 PST 2019","Sun Dec 01 11:19:19 PST 2019","1","Beginner","Data Structures","Unit Tests","","","Should return 'Publish!'","
		If there are one or two good ideas,
		return 'Publish!',
		:return:
		"
"passed","Tue Oct 29 19:43:14 PDT 2019","Tue Oct 29 19:43:14 PDT 2019","4","Beginner","Data Structures","Unit Tests","","","Testing check_exam function","
		Testing check_exam function

		The function should return the score
		for this array of answers, giving +4
		for each correct answer, -1 for each
		incorrect answer, and +0 for each blank
		answer(empty string).
		:return:
		"
"passed","Sun Dec 01 11:19:19 PST 2019","Sun Dec 01 11:19:19 PST 2019","1","Beginner","Data Structures","Unit Tests","","","Testing 'count_sheeps' function: positive flow","
		Testing 'count_sheeps' function
		Consider an array of sheep where some sheep
		may be missing from their place.
		We need a function that counts the
		number of sheep present in the array
		(true means present).
		:return:
		"
"passed","Sun Dec 01 11:19:19 PST 2019","Sun Dec 01 11:19:19 PST 2019","2","Beginner","Data Structures","Unit Tests","","","Non consecutive number should be returned","
		If we have an array [1,2,3,4,6,7,8] then 1 then 2
		then 3 then 4 are all consecutive but 6 is not,
		so that's the first non-consecutive number.
		:return:
		"
"passed","Sun Dec 01 11:19:19 PST 2019","Sun Dec 01 11:19:19 PST 2019","0","Beginner","Control Flow","Unit Tests","","","Wolf at the beginning of the queue","
		If the wolf is the closest animal to you,
		return ""Pls go away and stop eating my sheep"".
		:return:
		"
"passed","Sun Dec 01 11:19:17 PST 2019","Sun Dec 01 11:19:17 PST 2019","1","Novice","Advanced Language Features","Unit Tests","","","Testing alphanumeric function","
		Testing alphanumeric function with
		various test inputs

		The string has the following conditions
		to be alphanumeric only:

		1. At least one character ("""" is not valid)
		2. Allowed characters are uppercase / lowercase
		   latin letters and digits from 0 to 9
		3. No whitespaces / underscore / special chars
		:return:
		"
"passed","Sun Dec 01 11:19:17 PST 2019","Sun Dec 01 11:19:17 PST 2019","1","Novice","Algorithms","Unit Tests","","","String with no alphabet chars","
        Test string with no alphabet chars
        :return:
        "
"passed","Sun Dec 01 11:19:19 PST 2019","Sun Dec 01 11:19:19 PST 2019","0","Beginner","Math","Unit Tests","","","Testing check_for_factor function: positive flow","
		Testing check_for_factor function.

		This function should test if the
		factor is a factor of base.

		Return true if it is a factor.
		:return:
		"
"skipped","Sun Dec 01 11:19:18 PST 2019","Sun Dec 01 11:19:18 PST 2019","0","Beginner","OOP","Unit Tests","","","test_make_class","
		Testing make_class function
		:return:
		"
"passed","Sun Dec 01 11:19:18 PST 2019","Sun Dec 01 11:19:18 PST 2019","1","Beginner","Algorithms","Unit Tests","","","a an b are positive numbers","
		a an b are positive numbers
		:return:
		"
"passed","Sun Dec 01 11:19:19 PST 2019","Sun Dec 01 11:19:19 PST 2019","1","Beginner","Data Structures","Unit Tests","","","Testing period_is_late function (positive)","
		Positive tests
		:return:
		"
"passed","Sun Dec 01 11:19:18 PST 2019","Sun Dec 01 11:19:18 PST 2019","1","Beginner","Data Structures","Unit Tests","","","Testing 'solution' function","
		Testing 'sentencify' function.

		The function should:

		1. Capitalise the first letter of the first word.
		2. Add a period (.) to the end of the sentence.
		3. Join the words into a complete string, with spaces.
		4. Do no other manipulation on the words.

		:return:
		"
"passed","Sun Dec 01 11:19:17 PST 2019","Sun Dec 01 11:19:17 PST 2019","2","Competent","Algorithms","Unit Tests","","","Testing sum_of_intervals function","
		Testing sum_of_intervals function

		The function should accept an array of intervals,
		and return the sum of all the interval lengths.

		Overlapping intervals should only be counted once.

		Intervals
		Intervals are represented by a pair of integers in
		the form of an array. The first value of the interval
		will always be less than the second value.
		Interval example: [1, 5] is an interval from 1 to 5.
		The length of this interval is 4.
		:return:
		"
"passed","Sun Dec 01 11:19:19 PST 2019","Sun Dec 01 11:19:19 PST 2019","3","Beginner","Math","Unit Tests","","","STesting enough function","
		Testing enough function
		with various test data

		If there is enough space, return 0,
		and if there isn't, return the number
		of passengers he can't take.
		:return:
		"
"passed","Sun Dec 01 11:19:19 PST 2019","Sun Dec 01 11:19:19 PST 2019","1","Beginner","Data Structures","Unit Tests","","","Testing swap_values function","
		Testing swap_values function
		"
"passed","Sun Dec 01 11:19:18 PST 2019","Sun Dec 01 11:19:18 PST 2019","2","Beginner","Data Structures","Unit Tests","","","Testing invite_more_women function (positive)","
		Simple Fun #152: Invite More Women?
		Testing invite_more_women function (positive)
		:return:
		"
"passed","Sun Dec 01 11:19:17 PST 2019","Sun Dec 01 11:19:17 PST 2019","1","Novice","Algorithms","Unit Tests","","","Testing make_readable function","
		Testing make_readable function

		Write a function, which takes a non-negative integer
		(seconds) as input and returns the time in a human-readable
		format (HH:MM:SS)

		HH = hours, padded to 2 digits, range: 00 - 99
		MM = minutes, padded to 2 digits, range: 00 - 59
		SS = seconds, padded to 2 digits, range: 00 - 59

		The maximum time never exceeds 359999 (99:59:59)
		:return:
		"
"passed","Sun Dec 01 11:19:18 PST 2019","Sun Dec 01 11:19:18 PST 2019","2","Beginner","Algorithms","Unit Tests","","","Testing share_price function","
		Testing share_price function
		with multiple test inputs
		:return:
		"
"passed","Sun Dec 01 11:19:19 PST 2019","Sun Dec 01 11:19:19 PST 2019","1","Beginner","Data Structures","Unit Tests","","","Testing set_alarm function","
		Testing set_alarm function with various test inputs.

		The function should return true if you are employed
		and not on vacation (because these are the circumstances
		under which you need to set an alarm). It should return
		false otherwise.

		Examples:

		setAlarm(true, true) -> false
		setAlarm(false, true) -> false
		setAlarm(false, false) -> false
		setAlarm(true, false) -> true
		:return:
		"
"passed","Sun Dec 01 11:19:17 PST 2019","Sun Dec 01 11:19:17 PST 2019","10","Novice","Algorithms","Unit Tests","","","Testing permute_a_palindrome (negative)",""
"skipped","Sun Dec 01 11:19:19 PST 2019","Sun Dec 01 11:19:19 PST 2019","0","Beginner","Data Structures","Unit Tests","","","test_fix_the_meerkat",""
"passed","Sun Dec 01 11:19:19 PST 2019","Sun Dec 01 11:19:19 PST 2019","1","Beginner","Control Flow","Unit Tests","","","Wolf in the middle of the queue","
		If the wolf is the closest animal to you,
		return ""Pls go away and stop eating my sheep"".
		:return:
		"
"passed","Sun Dec 01 11:19:18 PST 2019","Sun Dec 01 11:19:18 PST 2019","1","Beginner","Data Structures","Unit Tests","","","Testing toJadenCase function (negative)","
		Simple negative test
		:return:
		"
"passed","Sun Dec 01 11:19:17 PST 2019","Sun Dec 01 11:19:17 PST 2019","1","Novice","Algorithms","Unit Tests","","","Testing 'longest_repetition' function","
		For a given string s find the character c (or C) with
		longest consecutive repetition and return: (c, l)
		where l (or L) is the length of the repetition.

		For empty string return: ('', 0)
		:return:
		"
"passed","Sun Dec 01 11:19:17 PST 2019","Sun Dec 01 11:19:17 PST 2019","0","Novice","Algorithms","Unit Tests","","","String with mixed type of chars","
        Test string with mixed type of chars
        :return:
        "
"passed","Sun Dec 01 11:19:18 PST 2019","Sun Dec 01 11:19:18 PST 2019","1","Beginner","Algorithms","Unit Tests","","","Testing 'factorial' function","
		Testing 'factorial' function

		In mathematics, the factorial of a non-negative integer n,
		denoted by n!, is the product of all positive integers less
		than or equal to n. For example: 5! = 5 * 4 * 3 * 2 * 1 = 120.
		By convention the value of 0! is 1.

		Write a function to calculate factorial for a given input.
		If input is below 0 or above 12 throw an exception of type
		ValueError (Python).
		:return:
		"
"passed","Sun Dec 01 11:19:19 PST 2019","Sun Dec 01 11:19:19 PST 2019","1","Beginner","Data Structures","Unit Tests","","","Testing 'feast' function","
		Testing 'feast' function with various test inputs

		Testing a function feast that takes the animal's
		name and dish as arguments and returns true or
		false to indicate whether the beast is allowed
		to bring the dish to the feast.

		Assume that beast and dish are always lowercase strings,
		and that each has at least two letters. beast and dish
		may contain hyphens and spaces, but these will not appear
		at the beginning or end of the string. They will not
		contain numerals.

		There is just one rule: the dish must start and end with
		the same letters as the animal's name. For example, the
		great blue heron is bringing garlic naan and the chickadee
		is bringing chocolate cake.
		:return:
		"
"passed","Sun Dec 01 11:19:18 PST 2019","Sun Dec 01 11:19:18 PST 2019","2","Beginner","Data Structures","Unit Tests","","","Testing two_decimal_places function","
		Testing two_decimal_places function
		with various test inputs

		Each floating-point number should be
		formatted that only the first two
		decimal places are returned.

		You don't need to check whether the input
		is a valid number because only valid numbers
		are used in the tests.

		Don't round the numbers! Just cut them
		after two decimal places!
		:return:
		"
"passed","Sun Dec 01 11:19:19 PST 2019","Sun Dec 01 11:19:19 PST 2019","1","Beginner","Data Structures","Unit Tests","","","Non is expected","
		If the whole array is consecutive then return
		null or Nothing or None.
		:return:
		"
"passed","Sun Dec 01 11:19:19 PST 2019","Sun Dec 01 11:19:19 PST 2019","1","Beginner","Data Structures","Unit Tests","","","Should return 'Fail!'s","
		If there are no good ideas,
		as is often the case, return 'Fail!'.
		:return:
		"
"passed","Sun Dec 01 11:19:18 PST 2019","Sun Dec 01 11:19:18 PST 2019","2","Beginner","Data Structures","Unit Tests","","","Testing 'save' function: negative","
        Testing 'save' function: negative

        The function should determine how many
        files of the copy queue you will be able
        to save into your Hard Disk Drive.
        :return:
        "
"passed","Sun Dec 01 11:19:17 PST 2019","Sun Dec 01 11:19:17 PST 2019","2","Novice","Algorithms","Unit Tests","","","All chars are in upper case","
        Testing letter_frequency function
        where all chars are in upper case
        :return:
        "
"passed","Sun Dec 01 11:19:18 PST 2019","Sun Dec 01 11:19:18 PST 2019","1","Novice","Advanced Language Features","Unit Tests","","","Testing 'has_subpattern' (part 2) function","
		Verify that 'has_subpattern' function to returns
        either true/True or false/False if a string can be
        seen as the repetition of a simpler/shorter subpattern or not.

        1. if a subpattern has been used, it will be repeated
        at least twice, meaning the subpattern has to be
        shorter than the original string;

		2. the strings you will be given might or might not
		be created repeating a given subpattern, then
		shuffling the result.
		:return:
		"
"passed","Sun Dec 01 11:19:19 PST 2019","Sun Dec 01 11:19:19 PST 2019","2","Beginner","Control Flow","Unit Tests","","","Verify that greet function returns the proper message","
		Use conditionals to to verify that greet
		function returns the proper message.
		:return:
		"
"passed","Sun Dec 01 11:19:19 PST 2019","Sun Dec 01 11:19:19 PST 2019","4","Beginner","Control Flow","Unit Tests","","","Testing 'summation' function","
		Testing summation function
		with various test inputs
		:return:
		"
"passed","Sun Dec 01 11:19:18 PST 2019","Sun Dec 01 11:19:18 PST 2019","0","Beginner","Data Structures","Unit Tests","","","Two smallest numbers in the start of the list","
		Test sum_two_smallest_numbers function
		The function should return the sum of
		the two lowest positive numbers
		:return:
		"
"passed","Sun Dec 01 11:19:17 PST 2019","Sun Dec 01 11:19:17 PST 2019","1","Novice","Algorithms","Unit Tests","","","All chars are in mixed case","
        Testing letter_frequency function
        where all chars are in mixed case
        :return:
        "
"passed","Sun Dec 01 11:19:19 PST 2019","Sun Dec 01 11:19:19 PST 2019","1","Beginner","Math","Unit Tests","","","Non square numbers (negative)","
		26 is not a square number
		:return:
		"
"passed","Sun Dec 01 11:19:18 PST 2019","Sun Dec 01 11:19:18 PST 2019","2","Beginner","Algorithms","Unit Tests","","","Testing 'sum_triangular_numbers' with negative numbers","
		Testing 'sum_triangular_numbers' function
		with negative numbers
		:return:
		"
"passed","Sun Dec 01 11:19:18 PST 2019","Sun Dec 01 11:19:18 PST 2019","3","Beginner","Data Structures","Unit Tests","","","Testing check_root function","
		Testing check_root function with various test inputs

		A function which takes numbers separated by commas
		in string format and returns the number which is a
		perfect square and the square root of that number.

		If string contains other characters than number or
		it has more or less than 4 numbers separated by comma
		function returns ""incorrect input"".

		If string contains 4 numbers but not consecutive it
		returns ""not consecutive"".
		:return:
		"
"passed","Sun Dec 01 11:19:17 PST 2019","Sun Dec 01 11:19:17 PST 2019","1","Novice","Algorithms","Unit Tests","","","Testing permute_a_palindrome (empty string)",""
"passed","Sun Dec 01 11:19:19 PST 2019","Sun Dec 01 11:19:19 PST 2019","0","Beginner","Math","Unit Tests","","","Square numbers (positive)","
		4 is a square number
		:return:
		"
"passed","Sun Dec 01 11:19:19 PST 2019","Sun Dec 01 11:19:19 PST 2019","3","Beginner","Data Structures","Unit Tests","","","Testing to_alternating_case function","
		Testing to_alternating_case function
		:return:
		"
"passed","Sun Dec 01 11:19:18 PST 2019","Sun Dec 01 11:19:18 PST 2019","1","Beginner","Algorithms","Unit Tests","","","Testing growing_plant function","
		Testing growing_plant function

		Task

		Each day a plant is growing by upSpeed meters.
		Each night that plant's height decreases by downSpeed
		meters due to the lack of sun heat. Initially, plant
		is 0 meters tall. We plant the seed at the beginning
		of a day. We want to know when the height of the plant
		will reach a certain level.

		Example

		For upSpeed = 100, downSpeed = 10 and desiredHeight = 910,
		the output should be 10.

		For upSpeed = 10, downSpeed = 9 and desiredHeight = 4,
		the output should be 1. Because the plant reach to the desired
		height at day 1(10 meters).

		Input/Output

		[input] integer upSpeed
		A positive integer representing the daily growth.
		Constraints: 5 â‰¤ upSpeed â‰¤ 100.

		[input] integer downSpeed
		A positive integer representing the nightly decline.
		Constraints: 2 â‰¤ downSpeed < upSpeed.

		[input] integer desiredHeight
		A positive integer representing the threshold.
		Constraints: 4 â‰¤ desiredHeight â‰¤ 1000.

		[output] an integer

		The number of days that it will take for the plant to
		reach/pass desiredHeight (including the last day in the
		total count).
		"
"passed","Sun Dec 01 11:19:19 PST 2019","Sun Dec 01 11:19:19 PST 2019","1","Beginner","Data Structures","Unit Tests","","","Testing check_exam function","
		Testing check_exam function

		The function should return the score
		for this array of answers, giving +4
		for each correct answer, -1 for each
		incorrect answer, and +0 for each blank
		answer(empty string).
		:return:
		"
"passed","Sun Dec 01 11:19:17 PST 2019","Sun Dec 01 11:19:17 PST 2019","1","Novice","Algorithms","Unit Tests","","","Testing the 'pyramid' function","
		The 'pyramid' function should return
		an Array of ascending length subarrays.

		Note: the subarrays should be filled with 1s.
		:return:
		"
"passed","Sun Dec 01 11:19:18 PST 2019","Sun Dec 01 11:19:19 PST 2019","1","Beginner","Math","Unit Tests","","","Square numbers (positive)","
		25 is a square number
		:return:
		"
"passed","Sun Dec 01 11:19:18 PST 2019","Sun Dec 01 11:19:18 PST 2019","1","Beginner","Data Structures","Unit Tests","","","Testing length function where head = None","
		Testing length function
		where head = None

		The method length, which accepts a linked list
        (head), and returns the length of the list.
		:return:
		"
"passed","Sun Dec 01 11:19:18 PST 2019","Sun Dec 01 11:19:18 PST 2019","3","Beginner","Algorithms","Unit Tests","","","Testing 'sum_triangular_numbers' with big number as an input","
		Testing 'sum_triangular_numbers' function
		with big number as an input
		:return:
		"
"passed","Sun Dec 01 11:19:17 PST 2019","Sun Dec 01 11:19:17 PST 2019","5","Novice","Data Structures","Unit Tests","","","Testing 'letter_count' function","
		Testing 'letter_count' function
		:return:
		"
"skipped","Sun Dec 01 11:19:18 PST 2019","Sun Dec 01 11:19:18 PST 2019","0","Novice","Advanced Language Features","Unit Tests","","","test_has_subpattern","
		Verify that 'has_subpattern' function

		Return a subpattern with sorted characters,
		otherwise return the base string with sorted
		characters (you might consider this case as
		an edge case, with the subpattern being repeated
		only once and thus equalling the original input string).
		:return:
		"
"passed","Sun Dec 01 11:19:19 PST 2019","Sun Dec 01 11:19:19 PST 2019","1","Beginner","Math","Unit Tests","","","Testing check_for_factor function: positive flow","
		Testing check_for_factor function.

		This function should test if the
		factor is a factor of base.

		Return false if it is not a factor.
		:return:
		"
"passed","Sun Dec 01 11:19:17 PST 2019","Sun Dec 01 11:19:17 PST 2019","1","Competent","Algorithms","Unit Tests","","","Testing format_duration","
		Test a function which formats a duration,
		given as a number of seconds, in a human-friendly way.

		The function must accept a non-negative integer.
		If it is zero, it just returns ""now"". Otherwise,
		the duration is expressed as a combination of years,
		days, hours, minutes and seconds.
		:return:
		"
"passed","Sun Dec 01 11:19:18 PST 2019","Sun Dec 01 11:19:18 PST 2019","3","Novice","Advanced Language Features","Unit Tests","","","Testing tickets function","
		Testing tickets function with various test inputs.

		The new ""Avengers"" movie has just been released!
		There are a lot of people at the cinema box office
		standing in a huge line. Each of them has a single
		100, 50 or 25 dollar bill. An ""Avengers"" ticket
		costs 25 dollars.

		Vasya is currently working as a clerk.
		He wants to sell a ticket to every single person
		in this line.

		Can Vasya sell a ticket to every person and give change
		if he initially has no money and sells the tickets strictly
		in the order people queue?

		The function should return YES, if Vasya can sell
		a ticket to every person and give change with the
		bills he has at hand at that moment. Otherwise return NO.
		:return:
		"
"passed","Sun Dec 01 11:19:18 PST 2019","Sun Dec 01 11:19:18 PST 2019","2","Novice","Data Structures","Unit Tests","","","Testing string_transformer function","
		Testing string_transformer function
		with multiple test data.

		Given a string, return a new string that has
		transformed based on the input:

			1. Change case of every character, ie. lower
			case to upper case, upper case to lower case.
			2. Reverse the order of words from the input.
		:return:
		"
"passed","Sun Dec 01 11:19:19 PST 2019","Sun Dec 01 11:19:19 PST 2019","1","Beginner","Data Structures","Unit Tests","","","Test with one char only","
		Test with one char only
		:return:
		"
"passed","Sun Dec 01 11:19:18 PST 2019","Sun Dec 01 11:19:18 PST 2019","1","Beginner","Data Structures","Unit Tests","","","Testing toJadenCase function (positive)","
		Simple positive test
		:return:
		"
"passed","Sun Dec 01 11:19:18 PST 2019","Sun Dec 01 11:19:18 PST 2019","9","Beginner","Algorithms","Unit Tests","","","Testing max_multiple function","
		Testing max_multiple function with
		various test data

		Given a Divisor and a Bound ,
		Find the largest integer N , Such That ,

		Conditions:
        1. N is divisible by divisor
        2. N is less than or equal to bound
        3. N is greater than 0.

        Notes:
        1. The parameters (divisor, bound)
            passed to the function are only positve values .
        2. It's guaranteed that a divisor is Found .
		:return:
		"
"passed","Sun Dec 01 11:19:18 PST 2019","Sun Dec 01 11:19:18 PST 2019","3","Beginner","Algorithms","Unit Tests","","","powers function should return an array of unique numbers","
		The function powers takes a single parameter,
		the number n, and should return an array of unique numbers.
		:return:
		"
"passed","Sun Dec 01 11:19:19 PST 2019","Sun Dec 01 11:19:19 PST 2019","1","Beginner","Data Structures","Unit Tests","","","Testing 'count_sheeps' function: mixed list","
		Testing 'count_sheeps' function
		Hint: Don't forget to check for
		bad values like mixed list
		:return:
		"
