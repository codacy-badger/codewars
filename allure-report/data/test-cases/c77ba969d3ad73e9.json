{
  "uid" : "c77ba969d3ad73e9",
  "name" : "Testing first_non_repeating_letter function",
  "fullName" : "kyu_5.first_non_repeating_character.test_first_non_repeating_letter.FirstNonRepeatingLetterTestCase#test_first_non_repeating_letter",
  "historyId" : "b5a1c5eb9c825db6f453100e4dceac7d",
  "time" : {
    "start" : 1579151844923,
    "stop" : 1579151844925,
    "duration" : 2
  },
  "description" : "\n        Testing a function named first_non_repeating_letter\n        that takes a string input, and returns the first character\n        that is not repeated anywhere in the string.\n\n        For example, if given the input 'stress', the function\n        should return 't', since the letter t only occurs once\n        in the string, and occurs first in the string.\n\n        As an added challenge, upper- and lowercase letters are\n        considered the same character, but the function should\n        return the correct case for the initial letter. For example,\n        the input 'sTreSS' should return 'T'.\n\n        If a string contains all repeating characters, it should\n        return an empty string (\"\") or None -- see sample tests.\n        :return:\n        ",
  "descriptionHtml" : "<pre><code>    Testing a function named first_non_repeating_letter\n    that takes a string input, and returns the first character\n    that is not repeated anywhere in the string.\n\n    For example, if given the input 'stress', the function\n    should return 't', since the letter t only occurs once\n    in the string, and occurs first in the string.\n\n    As an added challenge, upper- and lowercase letters are\n    considered the same character, but the function should\n    return the correct case for the initial letter. For example,\n    the input 'sTreSS' should return 'T'.\n\n    If a string contains all repeating characters, it should\n    return an empty string (&quot;&quot;) or None -- see sample tests.\n    :return:\n</code></pre>\n",
  "status" : "passed",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "_UnitTestCase__pytest_class_setup",
    "time" : {
      "start" : 1579151844922,
      "stop" : 1579151844922,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  } ],
  "testStage" : {
    "description" : "\n        Testing a function named first_non_repeating_letter\n        that takes a string input, and returns the first character\n        that is not repeated anywhere in the string.\n\n        For example, if given the input 'stress', the function\n        should return 't', since the letter t only occurs once\n        in the string, and occurs first in the string.\n\n        As an added challenge, upper- and lowercase letters are\n        considered the same character, but the function should\n        return the correct case for the initial letter. For example,\n        the input 'sTreSS' should return 'T'.\n\n        If a string contains all repeating characters, it should\n        return an empty string (\"\") or None -- see sample tests.\n        :return:\n        ",
    "status" : "passed",
    "steps" : [ {
      "name" : "Enter test string and verify the output",
      "time" : {
        "start" : 1579151844923,
        "stop" : 1579151844924,
        "duration" : 1
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "hasContent" : false,
      "shouldDisplayMessage" : false,
      "attachmentsCount" : 0
    } ],
    "attachments" : [ {
      "uid" : "51a510771cab2dd9",
      "name" : "stdout",
      "source" : "51a510771cab2dd9.txt",
      "type" : "text/plain",
      "size" : 392
    } ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "hasContent" : true,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 1
  },
  "afterStages" : [ {
    "name" : "_UnitTestCase__pytest_class_setup::0",
    "time" : {
      "start" : 1579151844929,
      "stop" : 1579151844929,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  } ],
  "labels" : [ {
    "name" : "severity",
    "value" : "normal"
  }, {
    "name" : "story",
    "value" : "First non-repeating character"
  }, {
    "name" : "feature",
    "value" : "String"
  }, {
    "name" : "tag",
    "value" : "STRINGS"
  }, {
    "name" : "tag",
    "value" : "SEARCH"
  }, {
    "name" : "suite",
    "value" : "Algorithms"
  }, {
    "name" : "tag",
    "value" : "ALGORITHMS"
  }, {
    "name" : "epic",
    "value" : "5 kyu"
  }, {
    "name" : "parentSuite",
    "value" : "Novice"
  }, {
    "name" : "subSuite",
    "value" : "Unit Tests"
  }, {
    "name" : "host",
    "value" : "DESKTOP-RJASUD2"
  }, {
    "name" : "thread",
    "value" : "3464-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "kyu_5.first_non_repeating_character.test_first_non_repeating_letter"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ {
    "name" : "Source/Kata",
    "url" : "https://www.codewars.com/kata/52bc74d4ac05d0945d00054e/train/python",
    "type" : "link"
  } ],
  "hidden" : true,
  "retry" : true,
  "extra" : {
    "categories" : [ ],
    "tags" : [ "STRINGS", "SEARCH", "ALGORITHMS" ]
  },
  "source" : "c77ba969d3ad73e9.json",
  "parameterValues" : [ ]
}