{
  "uid" : "ac1bc89623760441",
  "name" : "Testing alphabet_war function",
  "fullName" : "kyu_5.alphabet_wars_nuclear_strike.test_alphabet_war.AlphabetWarTestCase#test_alphabet_war",
  "historyId" : "265b67c4139deaadb4d7c9416643f4c8",
  "time" : {
    "start" : 1579406490951,
    "stop" : 1579406490953,
    "duration" : 2
  },
  "description" : "\n\t\tTesting alphabet_war function\n\n\t\tIntroduction\n\t\tThere is a war and nobody knows - the alphabet war!\n\t\tThe letters hide in their nuclear shelters. The\n\t\tnuclear strikes hit the battlefield and killed a\n\t\tlot of them.\n\n\t\tTask\n\t\tWrite a function that accepts battlefield string\n\t\tand returns letters that survived the nuclear strike.\n\n\t\t1. The battlefield string consists of only small letters, #,[ and ].\n\n\t\t2. The nuclear shelter is represented by square brackets [].\n\t\tThe letters inside the square brackets represent letters\n\t\tinside the shelter.\n\n\t\t3. The # means a place where nuclear strike hit the battlefield.\n\t\tIf there is at least one # on the battlefield, all letters outside\n\t\tof shelter die. When there is no any # on the battlefield, all letters\n\t\tsurvive (but do not expect such scenario too often ;-P ).\n\n\t\t4. The shelters have some durability. When 2 or more # hit close to\n\t\tthe shelter, the shelter is destroyed and all letters inside evaporate.\n\t\tThe 'close to the shelter' means on the ground between the shelter and\n\t\tthe next shelter (or beginning/end of battlefield). The below samples\n\t\tmake it clear for you.\n\t\t:return:\n\t\t",
  "descriptionHtml" : "<pre><code>\tTesting alphabet_war function\n\n\tIntroduction\n\tThere is a war and nobody knows - the alphabet war!\n\tThe letters hide in their nuclear shelters. The\n\tnuclear strikes hit the battlefield and killed a\n\tlot of them.\n\n\tTask\n\tWrite a function that accepts battlefield string\n\tand returns letters that survived the nuclear strike.\n\n\t1. The battlefield string consists of only small letters, #,[ and ].\n\n\t2. The nuclear shelter is represented by square brackets [].\n\tThe letters inside the square brackets represent letters\n\tinside the shelter.\n\n\t3. The # means a place where nuclear strike hit the battlefield.\n\tIf there is at least one # on the battlefield, all letters outside\n\tof shelter die. When there is no any # on the battlefield, all letters\n\tsurvive (but do not expect such scenario too often ;-P ).\n\n\t4. The shelters have some durability. When 2 or more # hit close to\n\tthe shelter, the shelter is destroyed and all letters inside evaporate.\n\tThe 'close to the shelter' means on the ground between the shelter and\n\tthe next shelter (or beginning/end of battlefield). The below samples\n\tmake it clear for you.\n\t:return:\n</code></pre>\n",
  "status" : "passed",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "_UnitTestCase__pytest_class_setup",
    "time" : {
      "start" : 1579406490950,
      "stop" : 1579406490950,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  } ],
  "testStage" : {
    "description" : "\n\t\tTesting alphabet_war function\n\n\t\tIntroduction\n\t\tThere is a war and nobody knows - the alphabet war!\n\t\tThe letters hide in their nuclear shelters. The\n\t\tnuclear strikes hit the battlefield and killed a\n\t\tlot of them.\n\n\t\tTask\n\t\tWrite a function that accepts battlefield string\n\t\tand returns letters that survived the nuclear strike.\n\n\t\t1. The battlefield string consists of only small letters, #,[ and ].\n\n\t\t2. The nuclear shelter is represented by square brackets [].\n\t\tThe letters inside the square brackets represent letters\n\t\tinside the shelter.\n\n\t\t3. The # means a place where nuclear strike hit the battlefield.\n\t\tIf there is at least one # on the battlefield, all letters outside\n\t\tof shelter die. When there is no any # on the battlefield, all letters\n\t\tsurvive (but do not expect such scenario too often ;-P ).\n\n\t\t4. The shelters have some durability. When 2 or more # hit close to\n\t\tthe shelter, the shelter is destroyed and all letters inside evaporate.\n\t\tThe 'close to the shelter' means on the ground between the shelter and\n\t\tthe next shelter (or beginning/end of battlefield). The below samples\n\t\tmake it clear for you.\n\t\t:return:\n\t\t",
    "status" : "passed",
    "steps" : [ {
      "name" : "Enter test string and verify the output",
      "time" : {
        "start" : 1579406490951,
        "stop" : 1579406490952,
        "duration" : 1
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "hasContent" : false,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false
    } ],
    "attachments" : [ {
      "uid" : "a1f0981c88fe77c0",
      "name" : "stdout",
      "source" : "a1f0981c88fe77c0.txt",
      "type" : "text/plain",
      "size" : 731
    } ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "hasContent" : true,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false
  },
  "afterStages" : [ {
    "name" : "_UnitTestCase__pytest_class_setup::0",
    "time" : {
      "start" : 1579406490955,
      "stop" : 1579406490955,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  } ],
  "labels" : [ {
    "name" : "severity",
    "value" : "normal"
  }, {
    "name" : "tag",
    "value" : "REGULAR"
  }, {
    "name" : "tag",
    "value" : "FUNDAMENTALS"
  }, {
    "name" : "tag",
    "value" : "DECLARATIVE"
  }, {
    "name" : "tag",
    "value" : "PROGRAMMING"
  }, {
    "name" : "subSuite",
    "value" : "Unit Tests"
  }, {
    "name" : "story",
    "value" : "Alphabet wars - nuclear strike"
  }, {
    "name" : "tag",
    "value" : "STRINGS"
  }, {
    "name" : "tag",
    "value" : "EXPRESSIONS"
  }, {
    "name" : "tag",
    "value" : "ADVANCED"
  }, {
    "name" : "tag",
    "value" : "LANGUAGE"
  }, {
    "name" : "tag",
    "value" : "FEATURES"
  }, {
    "name" : "suite",
    "value" : "Advanced Language Features"
  }, {
    "name" : "parentSuite",
    "value" : "Novice"
  }, {
    "name" : "feature",
    "value" : "String"
  }, {
    "name" : "epic",
    "value" : "5 kyu"
  }, {
    "name" : "host",
    "value" : "DESKTOP-RJASUD2"
  }, {
    "name" : "thread",
    "value" : "3020-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "kyu_5.alphabet_wars_nuclear_strike.test_alphabet_war"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ {
    "name" : "Source/Kata",
    "url" : "https://www.codewars.com/kata/alphabet-wars-nuclear-strike/train/python",
    "type" : "link"
  } ],
  "hidden" : true,
  "retry" : true,
  "extra" : {
    "categories" : [ ],
    "tags" : [ "STRINGS", "LANGUAGE", "REGULAR", "DECLARATIVE", "EXPRESSIONS", "FUNDAMENTALS", "PROGRAMMING", "ADVANCED", "FEATURES" ]
  },
  "source" : "ac1bc89623760441.json",
  "parameterValues" : [ ]
}